<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="h_cmd" xml:space="preserve">
    <value>help h</value>
  </data>
  <data name="h_desc" xml:space="preserve">
    <value>Either shows a help for a single command, or DMs you help link if no arguments are specified.</value>
  </data>
  <data name="h_usage" xml:space="preserve">
    <value>`{0}h !!q` or `{0}h`</value>
  </data>
  <data name="hgit_cmd" xml:space="preserve">
    <value>hgit</value>
  </data>
  <data name="hgit_desc" xml:space="preserve">
    <value>Generates the commandlist.md file.</value>
  </data>
  <data name="hgit_usage" xml:space="preserve">
    <value>`{0}hgit`</value>
  </data>
  <data name="donate_cmd" xml:space="preserve">
    <value>donate</value>
  </data>
  <data name="donate_desc" xml:space="preserve">
    <value>Instructions for helping the project financially.</value>
  </data>
  <data name="donate_usage" xml:space="preserve">
    <value>`{0}donate`</value>
  </data>
  <data name="modules_cmd" xml:space="preserve">
    <value>modules mdls</value>
  </data>
  <data name="modules_desc" xml:space="preserve">
    <value>Lists all bot modules.</value>
  </data>
  <data name="modules_usage" xml:space="preserve">
    <value>`{0}modules`</value>
  </data>
  <data name="commands_cmd" xml:space="preserve">
    <value>commands cmds</value>
  </data>
  <data name="commands_desc" xml:space="preserve">
    <value>List all of the bot's commands from a certain module. You can either specify full, or only first few letters of the module name.</value>
  </data>
  <data name="commands_usage" xml:space="preserve">
    <value>`{0}commands Administration` or `{0}cmds Admin`</value>
  </data>
  <data name="greetdel_cmd" xml:space="preserve">
    <value>greetdel grdel</value>
  </data>
  <data name="greetdel_desc" xml:space="preserve">
    <value>Sets the time it takes (in seconds) for greet messages to be auto-deleted. Set 0 to disable automatic deletion.</value>
  </data>
  <data name="greetdel_usage" xml:space="preserve">
    <value>`{0}greetdel 0` or `{0}greetdel 30`</value>
  </data>
  <data name="greet_cmd" xml:space="preserve">
    <value>greet</value>
  </data>
  <data name="greet_desc" xml:space="preserve">
    <value>Toggles anouncements on the current channel when someone joins the server.</value>
  </data>
  <data name="greet_usage" xml:space="preserve">
    <value>`{0}greet`</value>
  </data>
  <data name="greetmsg_cmd" xml:space="preserve">
    <value>greetmsg</value>
  </data>
  <data name="greetmsg_desc" xml:space="preserve">
    <value>Sets a new join announcement message which will be shown in the server's channel. Type %user% if you want to mention the new member. Using it with no message will show the current greet message.</value>
  </data>
  <data name="greetmsg_usage" xml:space="preserve">
    <value>`{0}greetmsg Welcome, %user%.`</value>
  </data>
  <data name="bye_cmd" xml:space="preserve">
    <value>bye</value>
  </data>
  <data name="bye_desc" xml:space="preserve">
    <value>Toggles anouncements on the current channel when someone leaves the server.</value>
  </data>
  <data name="bye_usage" xml:space="preserve">
    <value>`{0}bye`</value>
  </data>
  <data name="byemsg_cmd" xml:space="preserve">
    <value>byemsg</value>
  </data>
  <data name="byemsg_desc" xml:space="preserve">
    <value>Sets a new leave announcement message. Type %user% if you want to show the name the user who left. Type %id% to show id. Using this command with no message will show the current bye message.</value>
  </data>
  <data name="byemsg_usage" xml:space="preserve">
    <value>`{0}byemsg %user% has left.`</value>
  </data>
  <data name="byedel_cmd" xml:space="preserve">
    <value>byedel</value>
  </data>
  <data name="byedel_desc" xml:space="preserve">
    <value>Sets the time it takes (in seconds) for bye messages to be auto-deleted. Set 0 to disable automatic deletion.</value>
  </data>
  <data name="byedel_usage" xml:space="preserve">
    <value>`{0}byedel 0` or `{0}byedel 30`</value>
  </data>
  <data name="greetdm_cmd" xml:space="preserve">
    <value>greetdm</value>
  </data>
  <data name="greetdm_desc" xml:space="preserve">
    <value>Toggles whether the greet messages will be sent in a DM (This is separate from greet - you can have both, any or neither enabled).</value>
  </data>
  <data name="greetdm_usage" xml:space="preserve">
    <value>`{0}greetdm`</value>
  </data>
  <data name="logserver_cmd" xml:space="preserve">
    <value>logserver</value>
  </data>
  <data name="logserver_desc" xml:space="preserve">
    <value>Logs server activity in this channel.</value>
  </data>
  <data name="logserver_usage" xml:space="preserve">
    <value>`{0}logserver`</value>
  </data>
  <data name="logignore_cmd" xml:space="preserve">
    <value>logignore</value>
  </data>
  <data name="logignore_desc" xml:space="preserve">
    <value>Toggles whether the .logserver command ignores this channel. Useful if you have hidden admin channel and public log channel.</value>
  </data>
  <data name="logignore_usage" xml:space="preserve">
    <value>`{0}logignore`</value>
  </data>
  <data name="userpresence_cmd" xml:space="preserve">
    <value>userpresence</value>
  </data>
  <data name="userpresence_desc" xml:space="preserve">
    <value>Starts logging to this channel when someone from the server goes online/offline/idle.</value>
  </data>
  <data name="userpresence_usage" xml:space="preserve">
    <value>`{0}userpresence`</value>
  </data>
  <data name="voicepresence_cmd" xml:space="preserve">
    <value>voicepresence</value>
  </data>
  <data name="voicepresence_desc" xml:space="preserve">
    <value>Toggles logging to this channel whenever someone joins or leaves a voice channel you are currently in.</value>
  </data>
  <data name="voicepresence_usage" xml:space="preserve">
    <value>`{0}voicepresence`</value>
  </data>
  <data name="repeatinvoke_cmd" xml:space="preserve">
    <value>repeatinvoke repinv</value>
  </data>
  <data name="repeatinvoke_desc" xml:space="preserve">
    <value>Immediately shows the repeat message and restarts the timer.</value>
  </data>
  <data name="repeatinvoke_usage" xml:space="preserve">
    <value>`{0}repinv`</value>
  </data>
  <data name="repeat_cmd" xml:space="preserve">
    <value>repeat</value>
  </data>
  <data name="repeat_desc" xml:space="preserve">
    <value>Repeat a message every X minutes. If no parameters are specified, repeat is disabled.</value>
  </data>
  <data name="repeat_usage" xml:space="preserve">
    <value>`{0}repeat 5 Hello there`</value>
  </data>
  <data name="rotateplaying_cmd" xml:space="preserve">
    <value>rotateplaying ropl</value>
  </data>
  <data name="rotateplaying_desc" xml:space="preserve">
    <value>Toggles rotation of playing status of the dynamic strings you previously specified.</value>
  </data>
  <data name="rotateplaying_usage" xml:space="preserve">
    <value>`{0}ropl`</value>
  </data>
  <data name="addplaying_cmd" xml:space="preserve">
    <value>addplaying adpl</value>
  </data>
  <data name="addplaying_desc" xml:space="preserve">
    <value>Adds a specified string to the list of playing strings to rotate. Supported placeholders: %servers%, %users%, %playing%, %queued%</value>
  </data>
  <data name="addplaying_usage" xml:space="preserve">
    <value>`{0}adpl`</value>
  </data>
  <data name="listplaying_cmd" xml:space="preserve">
    <value>listplaying lipl</value>
  </data>
  <data name="listplaying_desc" xml:space="preserve">
    <value>Lists all playing statuses with their corresponding number.</value>
  </data>
  <data name="listplaying_usage" xml:space="preserve">
    <value>`{0}lipl`</value>
  </data>
  <data name="removeplaying_cmd" xml:space="preserve">
    <value>removeplaying rmpl repl</value>
  </data>
  <data name="removeplaying_desc" xml:space="preserve">
    <value>Removes a playing string on a given number.</value>
  </data>
  <data name="removeplaying_usage" xml:space="preserve">
    <value>`{0}rmpl`</value>
  </data>
  <data name="slowmode_cmd" xml:space="preserve">
    <value>slowmode</value>
  </data>
  <data name="slowmode_desc" xml:space="preserve">
    <value>Toggles slowmode. Disable by specifying no parameters. To enable, specify a number of messages each user can send, and an interval in seconds. For example 1 message every 5 seconds.</value>
  </data>
  <data name="slowmode_usage" xml:space="preserve">
    <value>`{0}slowmode 1 5` or `{0}slowmode`</value>
  </data>
  <data name="cleanvplust_cmd" xml:space="preserve">
    <value>cleanvplust cv+t</value>
  </data>
  <data name="cleanvplust_desc" xml:space="preserve">
    <value>Deletes all text channels ending in `-voice` for which voicechannels are not found. Use at your own risk.</value>
  </data>
  <data name="cleanvplust_usage" xml:space="preserve">
    <value>`{0}cleanv+t`</value>
  </data>
  <data name="voiceplustext_cmd" xml:space="preserve">
    <value>voice+text v+t</value>
  </data>
  <data name="voiceplustext_desc" xml:space="preserve">
    <value>Creates a text channel for each voice channel only users in that voice channel can see.If you are server owner, keep in mind you will see them all the time regardless.</value>
  </data>
  <data name="voiceplustext_usage" xml:space="preserve">
    <value>`{0}voice+text`</value>
  </data>
  <data name="scsc_cmd" xml:space="preserve">
    <value>scsc</value>
  </data>
  <data name="scsc_desc" xml:space="preserve">
    <value>Starts an instance of cross server channel. You will get a token as a DM that other people will use to tune in to the same instance.</value>
  </data>
  <data name="scsc_usage" xml:space="preserve">
    <value>`{0}scsc`</value>
  </data>
  <data name="jcsc_cmd" xml:space="preserve">
    <value>jcsc</value>
  </data>
  <data name="jcsc_desc" xml:space="preserve">
    <value>Joins current channel to an instance of cross server channel using the token.</value>
  </data>
  <data name="jcsc_usage" xml:space="preserve">
    <value>`{0}jcsc TokenHere`</value>
  </data>
  <data name="lcsc_cmd" xml:space="preserve">
    <value>lcsc</value>
  </data>
  <data name="lcsc_desc" xml:space="preserve">
    <value>Leaves Cross server channel instance from this channel.</value>
  </data>
  <data name="lcsc_usage" xml:space="preserve">
    <value>`{0}lcsc`</value>
  </data>
  <data name="asar_cmd" xml:space="preserve">
    <value>asar</value>
  </data>
  <data name="asar_desc" xml:space="preserve">
    <value>Adds a role to the list of self-assignable roles.</value>
  </data>
  <data name="asar_usage" xml:space="preserve">
    <value>`{0}asar Gamer`</value>
  </data>
  <data name="rsar_cmd" xml:space="preserve">
    <value>rsar</value>
  </data>
  <data name="rsar_desc" xml:space="preserve">
    <value>Removes a specified role from the list of self-assignable roles.</value>
  </data>
  <data name="rsar_usage" xml:space="preserve">
    <value>`{0}rsar`</value>
  </data>
  <data name="lsar_cmd" xml:space="preserve">
    <value>lsar</value>
  </data>
  <data name="lsar_desc" xml:space="preserve">
    <value>Lists all self-assignable roles.</value>
  </data>
  <data name="lsar_usage" xml:space="preserve">
    <value>`{0}lsar`</value>
  </data>
  <data name="tesar_cmd" xml:space="preserve">
    <value>togglexclsar tesar</value>
  </data>
  <data name="tesar_desc" xml:space="preserve">
    <value>Toggles whether the self-assigned roles are exclusive. (So that any person can have only one of the self assignable roles)</value>
  </data>
  <data name="tesar_usage" xml:space="preserve">
    <value>`{0}tesar`</value>
  </data>
  <data name="iam_cmd" xml:space="preserve">
    <value>iam</value>
  </data>
  <data name="iam_desc" xml:space="preserve">
    <value>Adds a role to you that you choose. Role must be on a list of self-assignable roles.</value>
  </data>
  <data name="iam_usage" xml:space="preserve">
    <value>`{0}iam Gamer`</value>
  </data>
  <data name="iamnot_cmd" xml:space="preserve">
    <value>iamnot iamn</value>
  </data>
  <data name="iamnot_desc" xml:space="preserve">
    <value>Removes a role to you that you choose. Role must be on a list of self-assignable roles.</value>
  </data>
  <data name="iamnot_usage" xml:space="preserve">
    <value>`{0}iamn Gamer`</value>
  </data>
  <data name="addcustreact_cmd" xml:space="preserve">
    <value>addcustreact acr</value>
  </data>
  <data name="addcustreact_desc" xml:space="preserve">
    <value>Add a custom reaction with a trigger and a response. Running this command in server requires Administration permission. Running this command in DM is Bot Owner only and adds a new global custom reaction. Guide here: &lt;http://WizBot.readthedocs.io/en/latest/Custom%20Reactions/&gt;</value>
  </data>
  <data name="addcustreact_usage" xml:space="preserve">
    <value>`{0}acr "hello" Hi there %user%`</value>
  </data>
  <data name="listcustreact_cmd" xml:space="preserve">
    <value>listcustreact lcr</value>
  </data>
  <data name="listcustreact_desc" xml:space="preserve">
    <value>Lists global or server custom reactions (20 commands per page). Running the command in DM will list global custom reactions, while running it in server will list that server's custom reactions. Specifying `all` argument instead of the number will DM you a text file with a list of all custom reactions.</value>
  </data>
  <data name="listcustreact_usage" xml:space="preserve">
    <value>`{0}lcr 1` or `{0}lcr all`</value>
  </data>
  <data name="listcustreactg_cmd" xml:space="preserve">
    <value>listcustreactg lcrg</value>
  </data>
  <data name="listcustreactg_desc" xml:space="preserve">
    <value>Lists global or server custom reactions (20 commands per page) grouped by trigger, and show a number of responses for each. Running the command in DM will list global custom reactions, while running it in server will list that server's custom reactions.</value>
  </data>
  <data name="listcustreactg_usage" xml:space="preserve">
    <value>`{0}lcrg 1`</value>
  </data>
  <data name="showcustreact_cmd" xml:space="preserve">
    <value>showcustreact scr</value>
  </data>
  <data name="showcustreact_desc" xml:space="preserve">
    <value>Shows a custom reaction's response on a given ID.</value>
  </data>
  <data name="showcustreact_usage" xml:space="preserve">
    <value>`{0}scr 1`</value>
  </data>
  <data name="delcustreact_cmd" xml:space="preserve">
    <value>delcustreact dcr</value>
  </data>
  <data name="delcustreact_desc" xml:space="preserve">
    <value>Deletes a custom reaction on a specific index. If ran in DM, it is bot owner only and deletes a global custom reaction. If ran in a server, it requires Administration priviledges and removes server custom reaction.</value>
  </data>
  <data name="delcustreact_usage" xml:space="preserve">
    <value>`{0}dcr 5`</value>
  </data>
  <data name="autoassignrole_cmd" xml:space="preserve">
    <value>autoassignrole aar</value>
  </data>
  <data name="autoassignrole_desc" xml:space="preserve">
    <value>Automaticaly assigns a specified role to every user who joins the server.</value>
  </data>
  <data name="autoassignrole_usage" xml:space="preserve">
    <value>`{0}aar` to disable, `{0}aar Role Name` to enable</value>
  </data>
  <data name="leave_cmd" xml:space="preserve">
    <value>leave</value>
  </data>
  <data name="leave_desc" xml:space="preserve">
    <value>Makes WizBot leave the server. Either name or id required.</value>
  </data>
  <data name="leave_usage" xml:space="preserve">
    <value>`{0}leave 123123123331`</value>
  </data>
  <data name="delmsgoncmd_cmd" xml:space="preserve">
    <value>delmsgoncmd</value>
  </data>
  <data name="delmsgoncmd_desc" xml:space="preserve">
    <value>Toggles the automatic deletion of user's successful command message to prevent chat flood.</value>
  </data>
  <data name="delmsgoncmd_usage" xml:space="preserve">
    <value>`{0}delmsgoncmd`</value>
  </data>
  <data name="restart_cmd" xml:space="preserve">
    <value>restart</value>
  </data>
  <data name="restart_desc" xml:space="preserve">
    <value>Restarts the bot. Might not work.</value>
  </data>
  <data name="restart_usage" xml:space="preserve">
    <value>`{0}restart`</value>
  </data>
  <data name="setrole_cmd" xml:space="preserve">
    <value>setrole sr</value>
  </data>
  <data name="setrole_desc" xml:space="preserve">
    <value>Sets a role for a given user.</value>
  </data>
  <data name="setrole_usage" xml:space="preserve">
    <value>`{0}sr @User Guest`</value>
  </data>
  <data name="removerole_cmd" xml:space="preserve">
    <value>removerole rr</value>
  </data>
  <data name="removerole_desc" xml:space="preserve">
    <value>Removes a role from a given user.</value>
  </data>
  <data name="removerole_usage" xml:space="preserve">
    <value>`{0}rr @User Admin`</value>
  </data>
  <data name="renamerole_cmd" xml:space="preserve">
    <value>renamerole renr</value>
  </data>
  <data name="renamerole_desc" xml:space="preserve">
    <value>Renames a role. Roles you are renaming must be lower than bot's highest role.</value>
  </data>
  <data name="renamerole_usage" xml:space="preserve">
    <value>`{0}renr "First role" SecondRole`</value>
  </data>
  <data name="removeallroles_cmd" xml:space="preserve">
    <value>removeallroles rar</value>
  </data>
  <data name="removeallroles_desc" xml:space="preserve">
    <value>Removes all roles from a mentioned user.</value>
  </data>
  <data name="removeallroles_usage" xml:space="preserve">
    <value>`{0}rar @User`</value>
  </data>
  <data name="createrole_cmd" xml:space="preserve">
    <value>createrole cr</value>
  </data>
  <data name="createrole_desc" xml:space="preserve">
    <value>Creates a role with a given name.</value>
  </data>
  <data name="createrole_usage" xml:space="preserve">
    <value>`{0}cr Awesome Role`</value>
  </data>
  <data name="rolecolor_cmd" xml:space="preserve">
    <value>rolecolor rc</value>
  </data>
  <data name="rolecolor_desc" xml:space="preserve">
    <value>Set a role's color to the hex or 0-255 rgb color value provided.</value>
  </data>
  <data name="rolecolor_usage" xml:space="preserve">
    <value>`{0}rc Admin 255 200 100` or `{0}rc Admin ffba55`</value>
  </data>
  <data name="ban_cmd" xml:space="preserve">
    <value>ban b</value>
  </data>
  <data name="ban_desc" xml:space="preserve">
    <value>Bans a user by ID or name with an optional message.</value>
  </data>
  <data name="ban_usage" xml:space="preserve">
    <value>`{0}b "@some Guy" Your behaviour is toxic.`</value>
  </data>
  <data name="softban_cmd" xml:space="preserve">
    <value>softban sb</value>
  </data>
  <data name="softban_desc" xml:space="preserve">
    <value>Bans and then unbans a user by ID or name with an optional message.</value>
  </data>
  <data name="softban_usage" xml:space="preserve">
    <value>`{0}sb "@some Guy" Your behaviour is toxic.`</value>
  </data>
  <data name="kick_cmd" xml:space="preserve">
    <value>kick k</value>
  </data>
  <data name="kick_desc" xml:space="preserve">
    <value>Kicks a mentioned user.</value>
  </data>
  <data name="kick_usage" xml:space="preserve">
    <value>`{0}k "@some Guy" Your behaviour is toxic.`</value>
  </data>
  <data name="mute_cmd" xml:space="preserve">
    <value>mute</value>
  </data>
  <data name="mute_desc" xml:space="preserve">
    <value>Mutes a mentioned user both from speaking and chatting.</value>
  </data>
  <data name="mute_usage" xml:space="preserve">
    <value>`{0}mute @Someone`</value>
  </data>
  <data name="voiceunmute_cmd" xml:space="preserve">
    <value>voiceunmute</value>
  </data>
  <data name="voiceunmute_desc" xml:space="preserve">
    <value>Gives a previously voice-muted user a permission to speak.</value>
  </data>
  <data name="voiceunmute_usage" xml:space="preserve">
    <value>`{0}voiceunmute @Someguy`</value>
  </data>
  <data name="deafen_cmd" xml:space="preserve">
    <value>deafen deaf</value>
  </data>
  <data name="deafen_desc" xml:space="preserve">
    <value>Deafens mentioned user or users.</value>
  </data>
  <data name="deafen_usage" xml:space="preserve">
    <value>`{0}deaf "@Someguy"` or `{0}deaf "@Someguy" "@Someguy"`</value>
  </data>
  <data name="undeafen_cmd" xml:space="preserve">
    <value>undeafen undef</value>
  </data>
  <data name="undeafen_desc" xml:space="preserve">
    <value>Undeafens mentioned user or users.</value>
  </data>
  <data name="undeafen_usage" xml:space="preserve">
    <value>`{0}undef "@Someguy"` or `{0}undef "@Someguy" "@Someguy"`</value>
  </data>
  <data name="delvoichanl_cmd" xml:space="preserve">
    <value>delvoichanl dvch</value>
  </data>
  <data name="delvoichanl_desc" xml:space="preserve">
    <value>Deletes a voice channel with a given name.</value>
  </data>
  <data name="delvoichanl_usage" xml:space="preserve">
    <value>`{0}dvch VoiceChannelName`</value>
  </data>
  <data name="creatvoichanl_cmd" xml:space="preserve">
    <value>creatvoichanl cvch</value>
  </data>
  <data name="creatvoichanl_desc" xml:space="preserve">
    <value>Creates a new voice channel with a given name.</value>
  </data>
  <data name="creatvoichanl_usage" xml:space="preserve">
    <value>`{0}cvch VoiceChannelName`</value>
  </data>
  <data name="deltxtchanl_cmd" xml:space="preserve">
    <value>deltxtchanl dtch</value>
  </data>
  <data name="deltxtchanl_desc" xml:space="preserve">
    <value>Deletes a text channel with a given name.</value>
  </data>
  <data name="deltxtchanl_usage" xml:space="preserve">
    <value>`{0}dtch TextChannelName`</value>
  </data>
  <data name="creatxtchanl_cmd" xml:space="preserve">
    <value>creatxtchanl ctch</value>
  </data>
  <data name="creatxtchanl_desc" xml:space="preserve">
    <value>Creates a new text channel with a given name.</value>
  </data>
  <data name="creatxtchanl_usage" xml:space="preserve">
    <value>`{0}ctch TextChannelName`</value>
  </data>
  <data name="settopic_cmd" xml:space="preserve">
    <value>settopic st</value>
  </data>
  <data name="settopic_desc" xml:space="preserve">
    <value>Sets a topic on the current channel.</value>
  </data>
  <data name="settopic_usage" xml:space="preserve">
    <value>`{0}st My new topic`</value>
  </data>
  <data name="setchanlname_cmd" xml:space="preserve">
    <value>setchanlname schn</value>
  </data>
  <data name="setchanlname_desc" xml:space="preserve">
    <value>Changes the name of the current channel.</value>
  </data>
  <data name="setchanlname_usage" xml:space="preserve">
    <value>`{0}schn NewName`</value>
  </data>
  <data name="prune_cmd" xml:space="preserve">
    <value>prune clr</value>
  </data>
  <data name="prune_desc" xml:space="preserve">
    <value>`{0}prune` removes all WizBot's messages in the last 100 messages.`{0}prune X` removes last X messages from the channel (up to 100)`{0}prune @Someone` removes all Someone's messages in the last 100 messages.`{0}prune @Someone X` removes last X 'Someone's' messages in the channel.</value>
  </data>
  <data name="prune_usage" xml:space="preserve">
    <value>`{0}prune` or `{0}prune 5` or `{0}prune @Someone` or `{0}prune @Someone X`</value>
  </data>
  <data name="die_cmd" xml:space="preserve">
    <value>die</value>
  </data>
  <data name="die_desc" xml:space="preserve">
    <value>Shuts the bot down.</value>
  </data>
  <data name="die_usage" xml:space="preserve">
    <value>`{0}die`</value>
  </data>
  <data name="setname_cmd" xml:space="preserve">
    <value>setname newnm</value>
  </data>
  <data name="setname_desc" xml:space="preserve">
    <value>Gives the bot a new name.</value>
  </data>
  <data name="setname_usage" xml:space="preserve">
    <value>`{0}newnm BotName`</value>
  </data>
  <data name="setavatar_cmd" xml:space="preserve">
    <value>setavatar setav</value>
  </data>
  <data name="setavatar_desc" xml:space="preserve">
    <value>Sets a new avatar image for the WizBot. Argument is a direct link to an image.</value>
  </data>
  <data name="setavatar_usage" xml:space="preserve">
    <value>`{0}setav http://i.imgur.com/xTG3a1I.jpg`</value>
  </data>
  <data name="setgame_cmd" xml:space="preserve">
    <value>setgame</value>
  </data>
  <data name="setgame_desc" xml:space="preserve">
    <value>Sets the bots game.</value>
  </data>
  <data name="setgame_usage" xml:space="preserve">
    <value>`{0}setgame with snakes`</value>
  </data>
  <data name="send_cmd" xml:space="preserve">
    <value>send</value>
  </data>
  <data name="send_desc" xml:space="preserve">
    <value>Sends a message to someone on a different server through the bot.  Separate server and channel/user ids with `|` and prepend channel id with `c:` and user id with `u:`.</value>
  </data>
  <data name="send_usage" xml:space="preserve">
    <value>`{0}send serverid|c:channelid message` or `{0}send serverid|u:userid message`</value>
  </data>
  <data name="mentionrole_cmd" xml:space="preserve">
    <value>mentionrole menro</value>
  </data>
  <data name="mentionrole_desc" xml:space="preserve">
    <value>Mentions every person from the provided role or roles (separated by a ',') on this server. Requires you to have mention everyone permission.</value>
  </data>
  <data name="mentionrole_usage" xml:space="preserve">
    <value>`{0}menro RoleName`</value>
  </data>
  <data name="unstuck_cmd" xml:space="preserve">
    <value>unstuck</value>
  </data>
  <data name="unstuck_desc" xml:space="preserve">
    <value>Clears the message queue.</value>
  </data>
  <data name="unstuck_usage" xml:space="preserve">
    <value>`{0}unstuck`</value>
  </data>
  <data name="donators_cmd" xml:space="preserve">
    <value>donators</value>
  </data>
  <data name="donators_desc" xml:space="preserve">
    <value>List of lovely people who donated to keep this project alive.</value>
  </data>
  <data name="donators_usage" xml:space="preserve">
    <value>`{0}donators`</value>
  </data>
  <data name="donadd_cmd" xml:space="preserve">
    <value>donadd</value>
  </data>
  <data name="donadd_desc" xml:space="preserve">
    <value>Add a donator to the database.</value>
  </data>
  <data name="donadd_usage" xml:space="preserve">
    <value>`{0}donadd Donate Amount`</value>
  </data>
  <data name="announce_cmd" xml:space="preserve">
    <value>announce</value>
  </data>
  <data name="announce_desc" xml:space="preserve">
    <value>Sends a message to all servers' general channel bot is connected to.</value>
  </data>
  <data name="announce_usage" xml:space="preserve">
    <value>`{0}announce Useless spam`</value>
  </data>
  <data name="savechat_cmd" xml:space="preserve">
    <value>savechat</value>
  </data>
  <data name="savechat_desc" xml:space="preserve">
    <value>Saves a number of messages to a text file and sends it to you.</value>
  </data>
  <data name="savechat_usage" xml:space="preserve">
    <value>`{0}savechat 150`</value>
  </data>
  <data name="remind_cmd" xml:space="preserve">
    <value>remind</value>
  </data>
  <data name="remind_desc" xml:space="preserve">
    <value>Sends a message to you or a channel after certain amount of time. First argument is me/here/'channelname'. Second argument is time in a descending order (mo&gt;w&gt;d&gt;h&gt;m) example: 1w5d3h10m. Third argument is a (multiword)message.</value>
  </data>
  <data name="remind_usage" xml:space="preserve">
    <value>`{0}remind me 1d5h Do something` or `{0}remind #general 1m Start now!`</value>
  </data>
  <data name="remindtemplate_cmd" xml:space="preserve">
    <value>remindtemplate</value>
  </data>
  <data name="remindtemplate_desc" xml:space="preserve">
    <value>Sets message for when the remind is triggered.  Available placeholders are %user% - user who ran the command, %message% - Message specified in the remind, %target% - target channel of the remind.</value>
  </data>
  <data name="remindtemplate_usage" xml:space="preserve">
    <value>`{0}remindtemplate %user%, do %message%!`</value>
  </data>
  <data name="serverinfo_cmd" xml:space="preserve">
    <value>serverinfo sinfo</value>
  </data>
  <data name="serverinfo_desc" xml:space="preserve">
    <value>Shows info about the server the bot is on. If no channel is supplied, it defaults to current one.</value>
  </data>
  <data name="serverinfo_usage" xml:space="preserve">
    <value>`{0}sinfo Some Server`</value>
  </data>
  <data name="channelinfo_cmd" xml:space="preserve">
    <value>channelinfo cinfo</value>
  </data>
  <data name="channelinfo_desc" xml:space="preserve">
    <value>Shows info about the channel. If no channel is supplied, it defaults to current one.</value>
  </data>
  <data name="channelinfo_usage" xml:space="preserve">
    <value>`{0}cinfo #some-channel`</value>
  </data>
  <data name="userinfo_cmd" xml:space="preserve">
    <value>userinfo uinfo</value>
  </data>
  <data name="userinfo_desc" xml:space="preserve">
    <value>Shows info about the user. If no user is supplied, it defaults a user running the command.</value>
  </data>
  <data name="userinfo_usage" xml:space="preserve">
    <value>`{0}uinfo @SomeUser`</value>
  </data>
  <data name="whosplaying_cmd" xml:space="preserve">
    <value>whosplaying whpl</value>
  </data>
  <data name="whosplaying_desc" xml:space="preserve">
    <value>Shows a list of users who are playing the specified game.</value>
  </data>
  <data name="whosplaying_usage" xml:space="preserve">
    <value>`{0}whpl Overwatch`</value>
  </data>
  <data name="inrole_cmd" xml:space="preserve">
    <value>inrole</value>
  </data>
  <data name="inrole_desc" xml:space="preserve">
    <value>Lists every person from the provided role or roles (separated by a ',') on this server. If the list is too long for 1 message, you must have Manage Messages permission.</value>
  </data>
  <data name="inrole_usage" xml:space="preserve">
    <value>`{0}inrole Role`</value>
  </data>
  <data name="checkmyperms_cmd" xml:space="preserve">
    <value>checkmyperms</value>
  </data>
  <data name="checkmyperms_desc" xml:space="preserve">
    <value>Checks your user-specific permissions on this channel.</value>
  </data>
  <data name="checkmyperms_usage" xml:space="preserve">
    <value>`{0}checkmyperms`</value>
  </data>
  <data name="stats_cmd" xml:space="preserve">
    <value>stats</value>
  </data>
  <data name="stats_desc" xml:space="preserve">
    <value>Shows some basic stats for WizBot.</value>
  </data>
  <data name="stats_usage" xml:space="preserve">
    <value>`{0}stats`</value>
  </data>
  <data name="userid_cmd" xml:space="preserve">
    <value>userid uid</value>
  </data>
  <data name="userid_desc" xml:space="preserve">
    <value>Shows user ID.</value>
  </data>
  <data name="userid_usage" xml:space="preserve">
    <value>`{0}uid` or `{0}uid "@SomeGuy"`</value>
  </data>
  <data name="channelid_cmd" xml:space="preserve">
    <value>channelid cid</value>
  </data>
  <data name="channelid_desc" xml:space="preserve">
    <value>Shows current channel ID.</value>
  </data>
  <data name="channelid_usage" xml:space="preserve">
    <value>`{0}cid`</value>
  </data>
  <data name="serverid_cmd" xml:space="preserve">
    <value>serverid sid</value>
  </data>
  <data name="serverid_desc" xml:space="preserve">
    <value>Shows current server ID.</value>
  </data>
  <data name="serverid_usage" xml:space="preserve">
    <value>`{0}sid`</value>
  </data>
  <data name="roles_cmd" xml:space="preserve">
    <value>roles</value>
  </data>
  <data name="roles_desc" xml:space="preserve">
    <value>List roles on this server or a roles of a specific user if specified. Paginated. 20 roles per page.</value>
  </data>
  <data name="roles_usage" xml:space="preserve">
    <value>`{0}roles 2` or `{0}roles @Someone`</value>
  </data>
  <data name="channeltopic_cmd" xml:space="preserve">
    <value>channeltopic ct</value>
  </data>
  <data name="channeltopic_desc" xml:space="preserve">
    <value>Sends current channel's topic as a message.</value>
  </data>
  <data name="channeltopic_usage" xml:space="preserve">
    <value>`{0}ct`</value>
  </data>
  <data name="chnlfilterinv_cmd" xml:space="preserve">
    <value>chnlfilterinv cfi</value>
  </data>
  <data name="chnlfilterinv_desc" xml:space="preserve">
    <value>Toggles automatic deleting of invites posted in the channel. Does not negate the {0}srvrfilterinv enabled setting. Does not affect Bot Owner.</value>
  </data>
  <data name="chnlfilterinv_usage" xml:space="preserve">
    <value>`{0}cfi`</value>
  </data>
  <data name="srvrfilterinv_cmd" xml:space="preserve">
    <value>srvrfilterinv sfi</value>
  </data>
  <data name="srvrfilterinv_desc" xml:space="preserve">
    <value>Toggles automatic deleting of invites posted in the server. Does not affect Bot Owner.</value>
  </data>
  <data name="srvrfilterinv_usage" xml:space="preserve">
    <value>`{0}sfi`</value>
  </data>
  <data name="chnlfilterwords_cmd" xml:space="preserve">
    <value>chnlfilterwords cfw</value>
  </data>
  <data name="chnlfilterwords_desc" xml:space="preserve">
    <value>Toggles automatic deleting of messages containing banned words on the channel. Does not negate the {0}srvrfilterwords enabled setting. Does not affect bot owner.</value>
  </data>
  <data name="chnlfilterwords_usage" xml:space="preserve">
    <value>`{0}cfw`</value>
  </data>
  <data name="filterword_cmd" xml:space="preserve">
    <value>fw</value>
  </data>
  <data name="filterword_desc" xml:space="preserve">
    <value>Adds or removes (if it exists) a word from the list of filtered words. Use`{0}sfw` or `{0}cfw` to toggle filtering.</value>
  </data>
  <data name="filterword_usage" xml:space="preserve">
    <value>`{0}fw poop`</value>
  </data>
  <data name="lstfilterwords_cmd" xml:space="preserve">
    <value>lstfilterwords lfw</value>
  </data>
  <data name="lstfilterwords_desc" xml:space="preserve">
    <value>Shows a list of filtered words.</value>
  </data>
  <data name="lstfilterwords_usage" xml:space="preserve">
    <value>`{0}lfw`</value>
  </data>
  <data name="srvrfilterwords_cmd" xml:space="preserve">
    <value>srvrfilterwords sfw</value>
  </data>
  <data name="srvrfilterwords_desc" xml:space="preserve">
    <value>Toggles automatic deleting of messages containing forbidden words on the server. Does not affect Bot Owner.</value>
  </data>
  <data name="srvrfilterwords_usage" xml:space="preserve">
    <value>`{0}sfw`</value>
  </data>
  <data name="permrole_cmd" xml:space="preserve">
    <value>permrole pr</value>
  </data>
  <data name="permrole_desc" xml:space="preserve">
    <value>Sets a role which can change permissions. Or supply no parameters to find out the current one. Default one is 'WizBot'.</value>
  </data>
  <data name="permrole_usage" xml:space="preserve">
    <value>`{0}pr role`</value>
  </data>
  <data name="verbose_cmd" xml:space="preserve">
    <value>verbose v</value>
  </data>
  <data name="verbose_desc" xml:space="preserve">
    <value>Sets whether to show when a command/module is blocked.</value>
  </data>
  <data name="verbose_usage" xml:space="preserve">
    <value>`{0}verbose true`</value>
  </data>
  <data name="srvrmdl_cmd" xml:space="preserve">
    <value>srvrmdl sm</value>
  </data>
  <data name="srvrmdl_desc" xml:space="preserve">
    <value>Sets a module's permission at the server level.</value>
  </data>
  <data name="srvrmdl_usage" xml:space="preserve">
    <value>`{0}sm "module name" enable`</value>
  </data>
  <data name="srvrcmd_cmd" xml:space="preserve">
    <value>srvrcmd sc</value>
  </data>
  <data name="srvrcmd_desc" xml:space="preserve">
    <value>Sets a command's permission at the server level.</value>
  </data>
  <data name="srvrcmd_usage" xml:space="preserve">
    <value>`{0}sc "command name" disable`</value>
  </data>
  <data name="rolemdl_cmd" xml:space="preserve">
    <value>rolemdl rm</value>
  </data>
  <data name="rolemdl_desc" xml:space="preserve">
    <value>Sets a module's permission at the role level.</value>
  </data>
  <data name="rolemdl_usage" xml:space="preserve">
    <value>`{0}rm "module name" enable MyRole`</value>
  </data>
  <data name="rolecmd_cmd" xml:space="preserve">
    <value>rolecmd rc</value>
  </data>
  <data name="rolecmd_desc" xml:space="preserve">
    <value>Sets a command's permission at the role level.</value>
  </data>
  <data name="rolecmd_usage" xml:space="preserve">
    <value>`{0}rc "command name" disable MyRole`</value>
  </data>
  <data name="chnlmdl_cmd" xml:space="preserve">
    <value>chnlmdl cm</value>
  </data>
  <data name="chnlmdl_desc" xml:space="preserve">
    <value>Sets a module's permission at the channel level.</value>
  </data>
  <data name="chnlmdl_usage" xml:space="preserve">
    <value>`{0}cm "module name" enable SomeChannel`</value>
  </data>
  <data name="chnlcmd_cmd" xml:space="preserve">
    <value>chnlcmd cc</value>
  </data>
  <data name="chnlcmd_desc" xml:space="preserve">
    <value>Sets a command's permission at the channel level.</value>
  </data>
  <data name="chnlcmd_usage" xml:space="preserve">
    <value>`{0}cc "command name" enable SomeChannel`</value>
  </data>
  <data name="usrmdl_cmd" xml:space="preserve">
    <value>usrmdl um</value>
  </data>
  <data name="usrmdl_desc" xml:space="preserve">
    <value>Sets a module's permission at the user level.</value>
  </data>
  <data name="usrmdl_usage" xml:space="preserve">
    <value>`{0}um "module name" enable SomeUsername`</value>
  </data>
  <data name="usrcmd_cmd" xml:space="preserve">
    <value>usrcmd uc</value>
  </data>
  <data name="usrcmd_desc" xml:space="preserve">
    <value>Sets a command's permission at the user level.</value>
  </data>
  <data name="usrcmd_usage" xml:space="preserve">
    <value>`{0}uc "command name" enable SomeUsername`</value>
  </data>
  <data name="allsrvrmdls_cmd" xml:space="preserve">
    <value>allsrvrmdls asm</value>
  </data>
  <data name="allsrvrmdls_desc" xml:space="preserve">
    <value>Enable or disable all modules for your server.</value>
  </data>
  <data name="allsrvrmdls_usage" xml:space="preserve">
    <value>`{0}asm [enable/disable]`</value>
  </data>
  <data name="allchnlmdls_cmd" xml:space="preserve">
    <value>allchnlmdls acm</value>
  </data>
  <data name="allchnlmdls_desc" xml:space="preserve">
    <value>Enable or disable all modules in a specified channel.</value>
  </data>
  <data name="allchnlmdls_usage" xml:space="preserve">
    <value>`{0}acm enable #SomeChannel`</value>
  </data>
  <data name="allrolemdls_cmd" xml:space="preserve">
    <value>allrolemdls arm</value>
  </data>
  <data name="allrolemdls_desc" xml:space="preserve">
    <value>Enable or disable all modules for a specific role.</value>
  </data>
  <data name="allrolemdls_usage" xml:space="preserve">
    <value>`{0}arm [enable/disable] MyRole`</value>
  </data>
  <data name="userblacklist_cmd" xml:space="preserve">
    <value>ubl</value>
  </data>
  <data name="userblacklist_desc" xml:space="preserve">
    <value>Either [add]s or [rem]oves a user specified by a mention or ID from a blacklist.</value>
  </data>
  <data name="userblacklist_usage" xml:space="preserve">
    <value>`{0}ubl add @SomeUser` or `{0}ubl rem 12312312313`</value>
  </data>
  <data name="channelblacklist_cmd" xml:space="preserve">
    <value>cbl</value>
  </data>
  <data name="channelblacklist_desc" xml:space="preserve">
    <value>Either [add]s or [rem]oves a channel specified by an ID from a blacklist.</value>
  </data>
  <data name="channelblacklist_usage" xml:space="preserve">
    <value>`{0}cbl rem 12312312312`</value>
  </data>
  <data name="serverblacklist_cmd" xml:space="preserve">
    <value>sbl</value>
  </data>
  <data name="serverblacklist_desc" xml:space="preserve">
    <value>Either [add]s or [rem]oves a server specified by a Name or ID from a blacklist.</value>
  </data>
  <data name="serverblacklist_usage" xml:space="preserve">
    <value>`{0}sbl add 12312321312` or `{0}sbl rem SomeTrashServer`</value>
  </data>
  <data name="cmdcooldown_cmd" xml:space="preserve">
    <value>cmdcooldown cmdcd</value>
  </data>
  <data name="cmdcooldown_desc" xml:space="preserve">
    <value>Sets a cooldown per user for a command. Set to 0 to remove the cooldown.</value>
  </data>
  <data name="cmdcooldown_usage" xml:space="preserve">
    <value>`{0}cmdcd "some cmd" 5`</value>
  </data>
  <data name="allcmdcooldowns_cmd" xml:space="preserve">
    <value>allcmdcooldowns acmdcds</value>
  </data>
  <data name="allcmdcooldowns_desc" xml:space="preserve">
    <value>Shows a list of all commands and their respective cooldowns.</value>
  </data>
  <data name="allcmdcooldowns_usage" xml:space="preserve">
    <value>`{0}acmdcds`</value>
  </data>
  <data name="addquote_cmd" xml:space="preserve">
    <value>.</value>
  </data>
  <data name="addquote_desc" xml:space="preserve">
    <value>Adds a new quote with the specified name and message.</value>
  </data>
  <data name="addquote_usage" xml:space="preserve">
    <value>`{0}. sayhi Hi`</value>
  </data>
  <data name="showquote_cmd" xml:space="preserve">
    <value>..</value>
  </data>
  <data name="showquote_desc" xml:space="preserve">
    <value>Shows a random quote with a specified name.</value>
  </data>
  <data name="showquote_usage" xml:space="preserve">
    <value>`{0}.. abc`</value>
  </data>
  <data name="deletequote_cmd" xml:space="preserve">
    <value>deletequote delq</value>
  </data>
  <data name="deletequote_desc" xml:space="preserve">
    <value>Deletes a random quote with the specified keyword. You have to either be server Administrator or the creator of the quote to delete it.</value>
  </data>
  <data name="deletequote_usage" xml:space="preserve">
    <value>`{0}delq abc`</value>
  </data>
  <data name="draw_cmd" xml:space="preserve">
    <value>draw</value>
  </data>
  <data name="draw_desc" xml:space="preserve">
    <value>Draws a card from the deck.If you supply number X, she draws up to 5 cards from the deck.</value>
  </data>
  <data name="draw_usage" xml:space="preserve">
    <value>`{0}draw` or `{0}draw 5`</value>
  </data>
  <data name="shuffleplaylist_cmd" xml:space="preserve">
    <value>shuffle sh</value>
  </data>
  <data name="shuffleplaylist_desc" xml:space="preserve">
    <value>Shuffles the current playlist.</value>
  </data>
  <data name="shuffleplaylist_usage" xml:space="preserve">
    <value>`{0}sh`</value>
  </data>
  <data name="flip_cmd" xml:space="preserve">
    <value>flip</value>
  </data>
  <data name="flip_desc" xml:space="preserve">
    <value>Flips coin(s) - heads or tails, and shows an image.</value>
  </data>
  <data name="flip_usage" xml:space="preserve">
    <value>`{0}flip` or `{0}flip 3`</value>
  </data>
  <data name="betflip_cmd" xml:space="preserve">
    <value>betflip bf</value>
  </data>
  <data name="betflip_desc" xml:space="preserve">
    <value>Bet to guess will the result be heads or tails. Guessing awards you 1.8x the currency you've bet.</value>
  </data>
  <data name="betflip_usage" xml:space="preserve">
    <value>`{0}bf 5 heads` or `{0}bf 3 t`</value>
  </data>
  <data name="roll_cmd" xml:space="preserve">
    <value>roll</value>
  </data>
  <data name="roll_desc" xml:space="preserve">
    <value>Rolls 0-100. If you supply a number [x] it rolls up to 30 normal dice. If you split 2 numbers with letter d (xdy) it will roll x dice from 1 to y.</value>
  </data>
  <data name="roll_usage" xml:space="preserve">
    <value>`{0}roll` or `{0}roll 7` or `{0}roll 3d5`</value>
  </data>
  <data name="rolluo_cmd" xml:space="preserve">
    <value>rolluo</value>
  </data>
  <data name="rolluo_desc" xml:space="preserve">
    <value>Rolls X normal dice (up to 30) unordered. If you split 2 numbers with letter d (xdy) it will roll x dice from 1 to y.</value>
  </data>
  <data name="rolluo_usage" xml:space="preserve">
    <value>`{0}rolluo` or `{0}rolluo 7` or `{0}rolluo 3d5`</value>
  </data>
  <data name="nroll_cmd" xml:space="preserve">
    <value>nroll</value>
  </data>
  <data name="nroll_desc" xml:space="preserve">
    <value>Rolls in a given range.</value>
  </data>
  <data name="nroll_usage" xml:space="preserve">
    <value>`{0}nroll 5` (rolls 0-5) or `{0}nroll 5-15`</value>
  </data>
  <data name="race_cmd" xml:space="preserve">
    <value>race</value>
  </data>
  <data name="race_desc" xml:space="preserve">
    <value>Starts a new animal race.</value>
  </data>
  <data name="race_usage" xml:space="preserve">
    <value>`{0}race`</value>
  </data>
  <data name="joinrace_cmd" xml:space="preserve">
    <value>joinrace jr</value>
  </data>
  <data name="joinrace_desc" xml:space="preserve">
    <value>Joins a new race. You can specify an amount of currency for betting (optional). You will get YourBet*(participants-1) back if you win.</value>
  </data>
  <data name="joinrace_usage" xml:space="preserve">
    <value>`{0}jr` or `{0}jr 5`</value>
  </data>
  <data name="raffle_cmd" xml:space="preserve">
    <value>raffle</value>
  </data>
  <data name="raffle_desc" xml:space="preserve">
    <value>Prints a name and ID of a random user from the online list from the (optional) role.</value>
  </data>
  <data name="raffle_usage" xml:space="preserve">
    <value>`{0}raffle` or `{0}raffle RoleName`</value>
  </data>
  <data name="give_cmd" xml:space="preserve">
    <value>give</value>
  </data>
  <data name="give_desc" xml:space="preserve">
    <value>Give someone a certain amount of currency.</value>
  </data>
  <data name="give_usage" xml:space="preserve">
    <value>`{0}give 1 "@SomeGuy"`</value>
  </data>
  <data name="award_cmd" xml:space="preserve">
    <value>award</value>
  </data>
  <data name="award_desc" xml:space="preserve">
    <value>Awards someone a certain amount of currency.  You can also specify a role name to award currency to all users in a role.</value>
  </data>
  <data name="award_usage" xml:space="preserve">
    <value>`{0}award 100 @person` or `{0}award 5 Role Of Gamblers`</value>
  </data>
  <data name="take_cmd" xml:space="preserve">
    <value>take</value>
  </data>
  <data name="take_desc" xml:space="preserve">
    <value>Takes a certain amount of currency from someone.</value>
  </data>
  <data name="take_usage" xml:space="preserve">
    <value>`{0}take 1 "@someguy"`</value>
  </data>
  <data name="betroll_cmd" xml:space="preserve">
    <value>betroll br</value>
  </data>
  <data name="betroll_desc" xml:space="preserve">
    <value>Bets a certain amount of currency and rolls a dice. Rolling over 66 yields x2 of your currency, over 90 - x3 and 100 x10.</value>
  </data>
  <data name="betroll_usage" xml:space="preserve">
    <value>`{0}br 5`</value>
  </data>
  <data name="leaderboard_cmd" xml:space="preserve">
    <value>leaderboard lb</value>
  </data>
  <data name="leaderboard_desc" xml:space="preserve">
    <value>Displays bot currency leaderboard.</value>
  </data>
  <data name="leaderboard_usage" xml:space="preserve">
    <value>`{0}lb`</value>
  </data>
  <data name="trivia_cmd" xml:space="preserve">
    <value>trivia t</value>
  </data>
  <data name="trivia_desc" xml:space="preserve">
    <value>Starts a game of trivia. You can add nohint to prevent hints.First player to get to 10 points wins by default. You can specify a different number. 30 seconds per question.</value>
  </data>
  <data name="trivia_usage" xml:space="preserve">
    <value>`{0}t` or `{0}t 5 nohint`</value>
  </data>
  <data name="tl_cmd" xml:space="preserve">
    <value>tl</value>
  </data>
  <data name="tl_desc" xml:space="preserve">
    <value>Shows a current trivia leaderboard.</value>
  </data>
  <data name="tl_usage" xml:space="preserve">
    <value>`{0}tl`</value>
  </data>
  <data name="tq_cmd" xml:space="preserve">
    <value>tq</value>
  </data>
  <data name="tq_desc" xml:space="preserve">
    <value>Quits current trivia after current question.</value>
  </data>
  <data name="tq_usage" xml:space="preserve">
    <value>`{0}tq`</value>
  </data>
  <data name="typestart_cmd" xml:space="preserve">
    <value>typestart</value>
  </data>
  <data name="typestart_desc" xml:space="preserve">
    <value>Starts a typing contest.</value>
  </data>
  <data name="typestart_usage" xml:space="preserve">
    <value>`{0}typestart`</value>
  </data>
  <data name="typestop_cmd" xml:space="preserve">
    <value>typestop</value>
  </data>
  <data name="typestop_desc" xml:space="preserve">
    <value>Stops a typing contest on the current channel.</value>
  </data>
  <data name="typestop_usage" xml:space="preserve">
    <value>`{0}typestop`</value>
  </data>
  <data name="typeadd_cmd" xml:space="preserve">
    <value>typeadd</value>
  </data>
  <data name="typeadd_desc" xml:space="preserve">
    <value>Adds a new article to the typing contest.</value>
  </data>
  <data name="typeadd_usage" xml:space="preserve">
    <value>`{0}typeadd wordswords`</value>
  </data>
  <data name="poll_cmd" xml:space="preserve">
    <value>poll</value>
  </data>
  <data name="poll_desc" xml:space="preserve">
    <value>Creates a poll which requires users to send the number of the voting option to the bot.</value>
  </data>
  <data name="poll_usage" xml:space="preserve">
    <value>`{0}poll Question?;Answer1;Answ 2;A_3`</value>
  </data>
  <data name="pollend_cmd" xml:space="preserve">
    <value>pollend</value>
  </data>
  <data name="pollend_desc" xml:space="preserve">
    <value>Stops active poll on this server and prints the results in this channel.</value>
  </data>
  <data name="pollend_usage" xml:space="preserve">
    <value>`{0}pollend`</value>
  </data>
  <data name="pick_cmd" xml:space="preserve">
    <value>pick</value>
  </data>
  <data name="pick_desc" xml:space="preserve">
    <value>Picks the currency planted in this channel.</value>
  </data>
  <data name="pick_usage" xml:space="preserve">
    <value>`{0}pick`</value>
  </data>
  <data name="plant_cmd" xml:space="preserve">
    <value>plant</value>
  </data>
  <data name="plant_desc" xml:space="preserve">
    <value>Spend a unit of currency to plant it in this channel. (If bot is restarted or crashes, the currency will be lost)</value>
  </data>
  <data name="plant_usage" xml:space="preserve">
    <value>`{0}plant`</value>
  </data>
  <data name="gencurrency_cmd" xml:space="preserve">
    <value>gencurrency gc</value>
  </data>
  <data name="gencurrency_desc" xml:space="preserve">
    <value>Toggles currency generation on this channel. Every posted message will have chance to spawn currency. Chance is specified by the Bot Owner. (default is 2%)</value>
  </data>
  <data name="gencurrency_usage" xml:space="preserve">
    <value>`{0}gc`</value>
  </data>
  <data name="leet_cmd" xml:space="preserve">
    <value>leet</value>
  </data>
  <data name="leet_desc" xml:space="preserve">
    <value>Converts a text to leetspeak with 6 (1-6) severity levels</value>
  </data>
  <data name="leet_usage" xml:space="preserve">
    <value>`{0}leet 3 Hello`</value>
  </data>
  <data name="choose_cmd" xml:space="preserve">
    <value>choose</value>
  </data>
  <data name="choose_desc" xml:space="preserve">
    <value>Chooses a thing from a list of things</value>
  </data>
  <data name="choose_usage" xml:space="preserve">
    <value>`{0}choose Get up;Sleep;Sleep more`</value>
  </data>
  <data name="_8ball_cmd" xml:space="preserve">
    <value>8ball</value>
  </data>
  <data name="_8ball_desc" xml:space="preserve">
    <value>Ask the 8ball a yes/no question.</value>
  </data>
  <data name="_8ball_usage" xml:space="preserve">
    <value>`{0}8ball should I do something`</value>
  </data>
  <data name="rps_cmd" xml:space="preserve">
    <value>rps</value>
  </data>
  <data name="rps_desc" xml:space="preserve">
    <value>Play a game of rocket paperclip scissors with WizBot.</value>
  </data>
  <data name="rps_usage" xml:space="preserve">
    <value>`{0}rps scissors`</value>
  </data>
  <data name="linux_cmd" xml:space="preserve">
    <value>linux</value>
  </data>
  <data name="linux_desc" xml:space="preserve">
    <value>Prints a customizable Linux interjection</value>
  </data>
  <data name="linux_usage" xml:space="preserve">
    <value>`{0}linux Spyware Windows`</value>
  </data>
  <data name="next_cmd" xml:space="preserve">
    <value>next n</value>
  </data>
  <data name="next_desc" xml:space="preserve">
    <value>Goes to the next song in the queue. You have to be in the same voice channel as the bot. You can skip multiple songs, but in that case songs will not be requeued if {0}rcs or {0}rpl is enabled.</value>
  </data>
  <data name="next_usage" xml:space="preserve">
    <value>`{0}n` or `{0}n 5`</value>
  </data>
  <data name="stop_cmd" xml:space="preserve">
    <value>stop s</value>
  </data>
  <data name="stop_desc" xml:space="preserve">
    <value>Stops the music and clears the playlist. Stays in the channel.</value>
  </data>
  <data name="stop_usage" xml:space="preserve">
    <value>`{0}s`</value>
  </data>
  <data name="destroy_cmd" xml:space="preserve">
    <value>destroy d</value>
  </data>
  <data name="destroy_desc" xml:space="preserve">
    <value>Completely stops the music and unbinds the bot from the channel. (may cause weird behaviour)</value>
  </data>
  <data name="destroy_usage" xml:space="preserve">
    <value>`{0}d`</value>
  </data>
  <data name="pause_cmd" xml:space="preserve">
    <value>pause p</value>
  </data>
  <data name="pause_desc" xml:space="preserve">
    <value>Pauses or Unpauses the song.</value>
  </data>
  <data name="pause_usage" xml:space="preserve">
    <value>`{0}p`</value>
  </data>
  <data name="queue_cmd" xml:space="preserve">
    <value>queue q yq</value>
  </data>
  <data name="queue_desc" xml:space="preserve">
    <value>Queue a song using keywords or a link. Bot will join your voice channel.**You must be in a voice channel**.</value>
  </data>
  <data name="queue_usage" xml:space="preserve">
    <value>`{0}q Dream Of Venice`</value>
  </data>
  <data name="soundcloudqueue_cmd" xml:space="preserve">
    <value>soundcloudqueue sq</value>
  </data>
  <data name="soundcloudqueue_desc" xml:space="preserve">
    <value>Queue a soundcloud song using keywords. Bot will join your voice channel.**You must be in a voice channel**.</value>
  </data>
  <data name="soundcloudqueue_usage" xml:space="preserve">
    <value>`{0}sq Dream Of Venice`</value>
  </data>
  <data name="listqueue_cmd" xml:space="preserve">
    <value>listqueue lq</value>
  </data>
  <data name="listqueue_desc" xml:space="preserve">
    <value>Lists 15 currently queued songs per page. Default page is 1.</value>
  </data>
  <data name="listqueue_usage" xml:space="preserve">
    <value>`{0}lq` or `{0}lq 2`</value>
  </data>
  <data name="nowplaying_cmd" xml:space="preserve">
    <value>nowplaying np</value>
  </data>
  <data name="nowplaying_desc" xml:space="preserve">
    <value>Shows the song currently playing.</value>
  </data>
  <data name="nowplaying_usage" xml:space="preserve">
    <value>`{0}np`</value>
  </data>
  <data name="volume_cmd" xml:space="preserve">
    <value>volume vol</value>
  </data>
  <data name="volume_desc" xml:space="preserve">
    <value>Sets the music volume 0-100%</value>
  </data>
  <data name="volume_usage" xml:space="preserve">
    <value>`{0}vol 50`</value>
  </data>
  <data name="defvol_cmd" xml:space="preserve">
    <value>defvol dv</value>
  </data>
  <data name="defvol_desc" xml:space="preserve">
    <value>Sets the default music volume when music playback is started (0-100). Persists through restarts.</value>
  </data>
  <data name="defvol_usage" xml:space="preserve">
    <value>`{0}dv 80`</value>
  </data>
  <data name="max_cmd" xml:space="preserve">
    <value>max</value>
  </data>
  <data name="max_desc" xml:space="preserve">
    <value>Sets the music volume to 100%.</value>
  </data>
  <data name="max_usage" xml:space="preserve">
    <value>`{0}max`</value>
  </data>
  <data name="half_cmd" xml:space="preserve">
    <value>half</value>
  </data>
  <data name="half_desc" xml:space="preserve">
    <value>Sets the music volume to 50%.</value>
  </data>
  <data name="half_usage" xml:space="preserve">
    <value>`{0}half`</value>
  </data>
  <data name="playlist_cmd" xml:space="preserve">
    <value>playlist pl</value>
  </data>
  <data name="playlist_desc" xml:space="preserve">
    <value>Queues up to 500 songs from a youtube playlist specified by a link, or keywords.</value>
  </data>
  <data name="playlist_usage" xml:space="preserve">
    <value>`{0}pl playlist link or name`</value>
  </data>
  <data name="soundcloudpl_cmd" xml:space="preserve">
    <value>soundcloudpl scpl</value>
  </data>
  <data name="soundcloudpl_desc" xml:space="preserve">
    <value>Queue a soundcloud playlist using a link.</value>
  </data>
  <data name="soundcloudpl_usage" xml:space="preserve">
    <value>`{0}scpl soundcloudseturl`</value>
  </data>
  <data name="localpl_cmd" xml:space="preserve">
    <value>localplaylst lopl</value>
  </data>
  <data name="localpl_desc" xml:space="preserve">
    <value>Queues all songs from a directory.</value>
  </data>
  <data name="localpl_usage" xml:space="preserve">
    <value>`{0}lopl C:/music/classical`</value>
  </data>
  <data name="radio_cmd" xml:space="preserve">
    <value>radio ra</value>
  </data>
  <data name="radio_desc" xml:space="preserve">
    <value>Queues a radio stream from a link. It can be a direct mp3 radio stream, .m3u, .pls .asx or .xspf (Usage Video: &lt;https://streamable.com/al54&gt;)</value>
  </data>
  <data name="radio_usage" xml:space="preserve">
    <value>`{0}ra radio link here`</value>
  </data>
  <data name="local_cmd" xml:space="preserve">
    <value>local lo</value>
  </data>
  <data name="local_desc" xml:space="preserve">
    <value>Queues a local file by specifying a full path.</value>
  </data>
  <data name="local_usage" xml:space="preserve">
    <value>`{0}lo C:/music/mysong.mp3`</value>
  </data>
  <data name="move_cmd" xml:space="preserve">
    <value>move mv</value>
  </data>
  <data name="move_desc" xml:space="preserve">
    <value>Moves the bot to your voice channel. (works only if music is already playing)</value>
  </data>
  <data name="move_usage" xml:space="preserve">
    <value>`{0}mv`</value>
  </data>
  <data name="remove_cmd" xml:space="preserve">
    <value>remove rm</value>
  </data>
  <data name="remove_desc" xml:space="preserve">
    <value>Remove a song by its # in the queue, or 'all' to remove whole queue.</value>
  </data>
  <data name="remove_usage" xml:space="preserve">
    <value>`{0}rm 5`</value>
  </data>
  <data name="movesong_cmd" xml:space="preserve">
    <value>movesong ms</value>
  </data>
  <data name="movesong_desc" xml:space="preserve">
    <value>Moves a song from one position to another.</value>
  </data>
  <data name="movesong_usage" xml:space="preserve">
    <value>`{0}ms 5&gt;3`</value>
  </data>
  <data name="setmaxqueue_cmd" xml:space="preserve">
    <value>setmaxqueue smq</value>
  </data>
  <data name="setmaxqueue_desc" xml:space="preserve">
    <value>Sets a maximum queue size. Supply 0 or no argument to have no limit.</value>
  </data>
  <data name="setmaxqueue_usage" xml:space="preserve">
    <value>`{0}smq 50` or `{0}smq`</value>
  </data>
  <data name="cleanup_cmd" xml:space="preserve">
    <value>cleanup</value>
  </data>
  <data name="cleanup_desc" xml:space="preserve">
    <value>Cleans up hanging voice connections.</value>
  </data>
  <data name="cleanup_usage" xml:space="preserve">
    <value>`{0}cleanup`</value>
  </data>
  <data name="reptcursong_cmd" xml:space="preserve">
    <value>reptcursong rcs</value>
  </data>
  <data name="reptcursong_desc" xml:space="preserve">
    <value>Toggles repeat of current song.</value>
  </data>
  <data name="reptcursong_usage" xml:space="preserve">
    <value>`{0}rcs`</value>
  </data>
  <data name="repeatpl_cmd" xml:space="preserve">
    <value>rpeatplaylst rpl</value>
  </data>
  <data name="repeatpl_desc" xml:space="preserve">
    <value>Toggles repeat of all songs in the queue (every song that finishes is added to the end of the queue).</value>
  </data>
  <data name="repeatpl_usage" xml:space="preserve">
    <value>`{0}rpl`</value>
  </data>
  <data name="save_cmd" xml:space="preserve">
    <value>save</value>
  </data>
  <data name="save_desc" xml:space="preserve">
    <value>Saves a playlist under a certain name. Name must be no longer than 20 characters and mustn't contain dashes.</value>
  </data>
  <data name="save_usage" xml:space="preserve">
    <value>`{0}save classical1`</value>
  </data>
  <data name="load_cmd" xml:space="preserve">
    <value>load</value>
  </data>
  <data name="load_desc" xml:space="preserve">
    <value>Loads a saved playlist using it's ID. Use `{0}pls` to list all saved playlists and {0}save to save new ones.</value>
  </data>
  <data name="load_usage" xml:space="preserve">
    <value>`{0}load 5`</value>
  </data>
  <data name="playlists_cmd" xml:space="preserve">
    <value>playlists pls</value>
  </data>
  <data name="playlists_desc" xml:space="preserve">
    <value>Lists all playlists. Paginated. 20 per page. Default page is 0.</value>
  </data>
  <data name="playlists_usage" xml:space="preserve">
    <value>`{0}pls 1`</value>
  </data>
  <data name="deleteplaylist_cmd" xml:space="preserve">
    <value>deleteplaylist delpls</value>
  </data>
  <data name="deleteplaylist_desc" xml:space="preserve">
    <value>Deletes a saved playlist. Only if you made it or if you are the bot owner.</value>
  </data>
  <data name="deleteplaylist_usage" xml:space="preserve">
    <value>`{0}delpls animu-5`</value>
  </data>
  <data name="goto_cmd" xml:space="preserve">
    <value>goto</value>
  </data>
  <data name="goto_desc" xml:space="preserve">
    <value>Goes to a specific time in seconds in a song.</value>
  </data>
  <data name="goto_usage" xml:space="preserve">
    <value>`{0}goto 30`</value>
  </data>
  <data name="getlink_cmd" xml:space="preserve">
    <value>getlink gl</value>
  </data>
  <data name="getlink_desc" xml:space="preserve">
    <value>Shows a link to the song in the queue by index, or the currently playing song by default.</value>
  </data>
  <data name="getlink_usage" xml:space="preserve">
    <value>`{0}gl`</value>
  </data>
  <data name="autoplay_cmd" xml:space="preserve">
    <value>autoplay ap</value>
  </data>
  <data name="autoplay_desc" xml:space="preserve">
    <value>Toggles autoplay - When the song is finished, automatically queue a related youtube song. (Works only for youtube songs and when queue is empty)</value>
  </data>
  <data name="autoplay_usage" xml:space="preserve">
    <value>`{0}ap`</value>
  </data>
  <data name="lolchamp_cmd" xml:space="preserve">
    <value>lolchamp</value>
  </data>
  <data name="lolchamp_desc" xml:space="preserve">
    <value>Shows League Of Legends champion statistics. If there are spaces/apostrophes or in the name - omit them. Optional second parameter is a role.</value>
  </data>
  <data name="lolchamp_usage" xml:space="preserve">
    <value>`{0}lolchamp Riven` or `{0}lolchamp Annie sup`</value>
  </data>
  <data name="lolban_cmd" xml:space="preserve">
    <value>lolban</value>
  </data>
  <data name="lolban_desc" xml:space="preserve">
    <value>Shows top banned champions ordered by ban rate.</value>
  </data>
  <data name="lolban_usage" xml:space="preserve">
    <value>`{0}lolban`</value>
  </data>
  <data name="hitbox_cmd" xml:space="preserve">
    <value>hitbox hb</value>
  </data>
  <data name="hitbox_desc" xml:space="preserve">
    <value>Notifies this channel when a certain user starts streaming.</value>
  </data>
  <data name="hitbox_usage" xml:space="preserve">
    <value>`{0}hitbox SomeStreamer`</value>
  </data>
  <data name="twitch_cmd" xml:space="preserve">
    <value>twitch tw</value>
  </data>
  <data name="twitch_desc" xml:space="preserve">
    <value>Notifies this channel when a certain user starts streaming.</value>
  </data>
  <data name="twitch_usage" xml:space="preserve">
    <value>`{0}twitch SomeStreamer`</value>
  </data>
  <data name="beam_cmd" xml:space="preserve">
    <value>beam bm</value>
  </data>
  <data name="beam_desc" xml:space="preserve">
    <value>Notifies this channel when a certain user starts streaming.</value>
  </data>
  <data name="beam_usage" xml:space="preserve">
    <value>`{0}beam SomeStreamer`</value>
  </data>
  <data name="removestream_cmd" xml:space="preserve">
    <value>removestream rms</value>
  </data>
  <data name="removestream_desc" xml:space="preserve">
    <value>Removes notifications of a certain streamer from a certain platform on this channel.</value>
  </data>
  <data name="removestream_usage" xml:space="preserve">
    <value>`{0}rms Twitch SomeGuy` or `{0}rms Beam SomeOtherGuy`</value>
  </data>
  <data name="liststreams_cmd" xml:space="preserve">
    <value>liststreams ls</value>
  </data>
  <data name="liststreams_desc" xml:space="preserve">
    <value>Lists all streams you are following on this server.</value>
  </data>
  <data name="liststreams_usage" xml:space="preserve">
    <value>`{0}ls`</value>
  </data>
  <data name="convert_cmd" xml:space="preserve">
    <value>convert</value>
  </data>
  <data name="convert_desc" xml:space="preserve">
    <value>Convert quantities. Use `{0}convertlist` to see supported dimensions and currencies.</value>
  </data>
  <data name="convert_usage" xml:space="preserve">
    <value>`{0}convert m km 1000`</value>
  </data>
  <data name="convertlist_cmd" xml:space="preserve">
    <value>convertlist</value>
  </data>
  <data name="convertlist_desc" xml:space="preserve">
    <value>List of the convertible dimensions and currencies.</value>
  </data>
  <data name="convertlist_usage" xml:space="preserve">
    <value>`{0}convertlist`</value>
  </data>
  <data name="wowjoke_cmd" xml:space="preserve">
    <value>wowjoke</value>
  </data>
  <data name="wowjoke_desc" xml:space="preserve">
    <value>Get one of Kwoth's penultimate WoW jokes.</value>
  </data>
  <data name="wowjoke_usage" xml:space="preserve">
    <value>`{0}wowjoke`</value>
  </data>
  <data name="calculate_cmd" xml:space="preserve">
    <value>calculate calc</value>
  </data>
  <data name="calculate_desc" xml:space="preserve">
    <value>Evaluate a mathematical expression.</value>
  </data>
  <data name="calculate_usage" xml:space="preserve">
    <value>`{0}calc 1+1`</value>
  </data>
  <data name="osu_cmd" xml:space="preserve">
    <value>osu</value>
  </data>
  <data name="osu_desc" xml:space="preserve">
    <value>Shows osu stats for a player.</value>
  </data>
  <data name="osu_usage" xml:space="preserve">
    <value>`{0}osu Name` or `{0}osu Name taiko`</value>
  </data>
  <data name="osub_cmd" xml:space="preserve">
    <value>osub</value>
  </data>
  <data name="osub_desc" xml:space="preserve">
    <value>Shows information about an osu beatmap.</value>
  </data>
  <data name="osub_usage" xml:space="preserve">
    <value>`{0}osub https://osu.ppy.sh/s/127712`</value>
  </data>
  <data name="osu5_cmd" xml:space="preserve">
    <value>osu5</value>
  </data>
  <data name="osu5_desc" xml:space="preserve">
    <value>Displays a user's top 5 plays.</value>
  </data>
  <data name="osu5_usage" xml:space="preserve">
    <value>`{0}osu5 Name`</value>
  </data>
  <data name="pokemon_cmd" xml:space="preserve">
    <value>pokemon poke</value>
  </data>
  <data name="pokemon_desc" xml:space="preserve">
    <value>Searches for a pokemon.</value>
  </data>
  <data name="pokemon_usage" xml:space="preserve">
    <value>`{0}poke Sylveon`</value>
  </data>
  <data name="pokemonability_cmd" xml:space="preserve">
    <value>pokemonability pokeab</value>
  </data>
  <data name="pokemonability_desc" xml:space="preserve">
    <value>Searches for a pokemon ability.</value>
  </data>
  <data name="pokemonability_usage" xml:space="preserve">
    <value>`{0}pokeab overgrow`</value>
  </data>
  <data name="memelist_cmd" xml:space="preserve">
    <value>memelist</value>
  </data>
  <data name="memelist_desc" xml:space="preserve">
    <value>Pulls a list of memes you can use with `{0}memegen` from http://memegen.link/templates/</value>
  </data>
  <data name="memelist_usage" xml:space="preserve">
    <value>`{0}memelist`</value>
  </data>
  <data name="memegen_cmd" xml:space="preserve">
    <value>memegen</value>
  </data>
  <data name="memegen_desc" xml:space="preserve">
    <value>Generates a meme from memelist with top and bottom text.</value>
  </data>
  <data name="memegen_usage" xml:space="preserve">
    <value>`{0}memegen biw "gets iced coffee" "in the winter"`</value>
  </data>
  <data name="weather_cmd" xml:space="preserve">
    <value>weather we</value>
  </data>
  <data name="weather_desc" xml:space="preserve">
    <value>Shows weather data for a specified city and a country. BOTH ARE REQUIRED. Use country abbrevations.</value>
  </data>
  <data name="weather_usage" xml:space="preserve">
    <value>`{0}we Moscow RF`</value>
  </data>
  <data name="youtube_cmd" xml:space="preserve">
    <value>youtube yt</value>
  </data>
  <data name="youtube_desc" xml:space="preserve">
    <value>Searches youtubes and shows the first result</value>
  </data>
  <data name="youtube_usage" xml:space="preserve">
    <value>`{0}yt query`</value>
  </data>
  <data name="anime_cmd" xml:space="preserve">
    <value>anime ani aq</value>
  </data>
  <data name="anime_desc" xml:space="preserve">
    <value>Queries anilist for an anime and shows the first result.</value>
  </data>
  <data name="anime_usage" xml:space="preserve">
    <value>`{0}ani aquarion evol`</value>
  </data>
  <data name="imdb_cmd" xml:space="preserve">
    <value>imdb omdb</value>
  </data>
  <data name="imdb_desc" xml:space="preserve">
    <value>Queries omdb for movies or series, show first result.</value>
  </data>
  <data name="imdb_usage" xml:space="preserve">
    <value>`{0}imdb Batman vs Superman`</value>
  </data>
  <data name="manga_cmd" xml:space="preserve">
    <value>manga mang mq</value>
  </data>
  <data name="manga_desc" xml:space="preserve">
    <value>Queries anilist for a manga and shows the first result.</value>
  </data>
  <data name="manga_usage" xml:space="preserve">
    <value>`{0}mq Shingeki no kyojin`</value>
  </data>
  <data name="randomcat_cmd" xml:space="preserve">
    <value>randomcat meow</value>
  </data>
  <data name="randomcat_desc" xml:space="preserve">
    <value>Shows a random cat image.</value>
  </data>
  <data name="randomcat_usage" xml:space="preserve">
    <value>`{0}meow`</value>
  </data>
  <data name="randomdog_cmd" xml:space="preserve">
    <value>randomdog woof</value>
  </data>
  <data name="randomdog_desc" xml:space="preserve">
    <value>Shows a random dog image.</value>
  </data>
  <data name="randomdog_usage" xml:space="preserve">
    <value>`{0}woof`</value>
  </data>
  <data name="i_cmd" xml:space="preserve">
    <value>img i</value>
  </data>
  <data name="i_desc" xml:space="preserve">
    <value>Pulls the first image found using a search parameter. Use {0}ir for different results.</value>
  </data>
  <data name="i_usage" xml:space="preserve">
    <value>`{0}i cute kitten`</value>
  </data>
  <data name="ir_cmd" xml:space="preserve">
    <value>ir</value>
  </data>
  <data name="ir_desc" xml:space="preserve">
    <value>Pulls a random image using a search parameter.</value>
  </data>
  <data name="ir_usage" xml:space="preserve">
    <value>`{0}ir cute kitten`</value>
  </data>
  <data name="lmgtfy_cmd" xml:space="preserve">
    <value>lmgtfy</value>
  </data>
  <data name="lmgtfy_desc" xml:space="preserve">
    <value>Google something for an idiot.</value>
  </data>
  <data name="lmgtfy_usage" xml:space="preserve">
    <value>`{0}lmgtfy query`</value>
  </data>
  <data name="google_cmd" xml:space="preserve">
    <value>google g</value>
  </data>
  <data name="google_desc" xml:space="preserve">
    <value>Get a google search link for some terms.</value>
  </data>
  <data name="google_usage" xml:space="preserve">
    <value>`{0}google query`</value>
  </data>
  <data name="hearthstone_cmd" xml:space="preserve">
    <value>hearthstone hs</value>
  </data>
  <data name="hearthstone_desc" xml:space="preserve">
    <value>Searches for a Hearthstone card and shows its image. Takes a while to complete.</value>
  </data>
  <data name="hearthstone_usage" xml:space="preserve">
    <value>`{0}hs Ysera`</value>
  </data>
  <data name="urbandict_cmd" xml:space="preserve">
    <value>urbandict ud</value>
  </data>
  <data name="urbandict_desc" xml:space="preserve">
    <value>Searches Urban Dictionary for a word.</value>
  </data>
  <data name="urbandict_usage" xml:space="preserve">
    <value>`{0}ud Pineapple`</value>
  </data>
  <data name="hashtag_cmd" xml:space="preserve">
    <value>#</value>
  </data>
  <data name="hashtag_desc" xml:space="preserve">
    <value>Searches Tagdef.com for a hashtag.</value>
  </data>
  <data name="hashtag_usage" xml:space="preserve">
    <value>`{0}# ff`</value>
  </data>
  <data name="catfact_cmd" xml:space="preserve">
    <value>catfact</value>
  </data>
  <data name="catfact_desc" xml:space="preserve">
    <value>Shows a random catfact from &lt;http://catfacts-api.appspot.com/api/facts&gt;</value>
  </data>
  <data name="catfact_usage" xml:space="preserve">
    <value>`{0}catfact`</value>
  </data>
  <data name="yomama_cmd" xml:space="preserve">
    <value>yomama ym</value>
  </data>
  <data name="yomama_desc" xml:space="preserve">
    <value>Shows a random joke from &lt;http://api.yomomma.info/&gt;</value>
  </data>
  <data name="yomama_usage" xml:space="preserve">
    <value>`{0}ym`</value>
  </data>
  <data name="randjoke_cmd" xml:space="preserve">
    <value>randjoke rj</value>
  </data>
  <data name="randjoke_desc" xml:space="preserve">
    <value>Shows a random joke from &lt;http://tambal.azurewebsites.net/joke/random&gt;</value>
  </data>
  <data name="randjoke_usage" xml:space="preserve">
    <value>`{0}rj`</value>
  </data>
  <data name="chucknorris_cmd" xml:space="preserve">
    <value>chucknorris cn</value>
  </data>
  <data name="chucknorris_desc" xml:space="preserve">
    <value>Shows a random chucknorris joke from &lt;http://tambal.azurewebsites.net/joke/random&gt;</value>
  </data>
  <data name="chucknorris_usage" xml:space="preserve">
    <value>`{0}cn`</value>
  </data>
  <data name="magicitem_cmd" xml:space="preserve">
    <value>magicitem mi</value>
  </data>
  <data name="magicitem_desc" xml:space="preserve">
    <value>Shows a random magicitem from &lt;https://1d4chan.org/wiki/List_of_/tg/%27s_magic_items&gt;</value>
  </data>
  <data name="magicitem_usage" xml:space="preserve">
    <value>`{0}mi`</value>
  </data>
  <data name="revav_cmd" xml:space="preserve">
    <value>revav</value>
  </data>
  <data name="revav_desc" xml:space="preserve">
    <value>Returns a google reverse image search for someone's avatar.</value>
  </data>
  <data name="revav_usage" xml:space="preserve">
    <value>`{0}revav "@SomeGuy"`</value>
  </data>
  <data name="revimg_cmd" xml:space="preserve">
    <value>revimg</value>
  </data>
  <data name="revimg_desc" xml:space="preserve">
    <value>Returns a google reverse image search for an image from a link.</value>
  </data>
  <data name="revimg_usage" xml:space="preserve">
    <value>`{0}revimg Image link`</value>
  </data>
  <data name="safebooru_cmd" xml:space="preserve">
    <value>safebooru</value>
  </data>
  <data name="safebooru_desc" xml:space="preserve">
    <value>Shows a random image from safebooru with a given tag. Tag is optional but preferred. (multiple tags are appended with +)</value>
  </data>
  <data name="safebooru_usage" xml:space="preserve">
    <value>`{0}safebooru yuri+kissing`</value>
  </data>
  <data name="wiki_cmd" xml:space="preserve">
    <value>wikipedia wiki</value>
  </data>
  <data name="wiki_desc" xml:space="preserve">
    <value>Gives you back a wikipedia link</value>
  </data>
  <data name="wiki_usage" xml:space="preserve">
    <value>`{0}wiki query`</value>
  </data>
  <data name="color_cmd" xml:space="preserve">
    <value>color clr</value>
  </data>
  <data name="color_desc" xml:space="preserve">
    <value>Shows you what color corresponds to that hex.</value>
  </data>
  <data name="color_usage" xml:space="preserve">
    <value>`{0}clr 00ff00`</value>
  </data>
  <data name="videocall_cmd" xml:space="preserve">
    <value>videocall</value>
  </data>
  <data name="videocall_desc" xml:space="preserve">
    <value>Creates a private &lt;http://www.appear.in&gt; video call link for you and other mentioned people. The link is sent to mentioned people via a private message.</value>
  </data>
  <data name="videocall_usage" xml:space="preserve">
    <value>`{0}videocall "@SomeGuy"`</value>
  </data>
  <data name="avatar_cmd" xml:space="preserve">
    <value>avatar av</value>
  </data>
  <data name="avatar_desc" xml:space="preserve">
    <value>Shows a mentioned person's avatar.</value>
  </data>
  <data name="avatar_usage" xml:space="preserve">
    <value>`{0}av "@SomeGuy"`</value>
  </data>
  <data name="hentai_cmd" xml:space="preserve">
    <value>hentai</value>
  </data>
  <data name="hentai_desc" xml:space="preserve">
    <value>Shows a hentai image from a random website (gelbooru or danbooru or konachan or atfbooru or yandere) with a given tag. Tag is optional but preferred. Only 1 tag allowed.</value>
  </data>
  <data name="hentai_usage" xml:space="preserve">
    <value>`{0}hentai yuri`</value>
  </data>
  <data name="danbooru_cmd" xml:space="preserve">
    <value>danbooru</value>
  </data>
  <data name="danbooru_desc" xml:space="preserve">
    <value>Shows a random hentai image from danbooru with a given tag. Tag is optional but preferred. (multiple tags are appended with +)</value>
  </data>
  <data name="danbooru_usage" xml:space="preserve">
    <value>`{0}danbooru yuri+kissing`</value>
  </data>
  <data name="atfbooru_cmd" xml:space="preserve">
    <value>atfbooru atf</value>
  </data>
  <data name="atfbooru_desc" xml:space="preserve">
    <value>Shows a random hentai image from atfbooru with a given tag. Tag is optional but preferred.</value>
  </data>
  <data name="atfbooru_usage" xml:space="preserve">
    <value>`{0}atfbooru yuri+kissing`</value>
  </data>
  <data name="gelbooru_cmd" xml:space="preserve">
    <value>gelbooru</value>
  </data>
  <data name="gelbooru_desc" xml:space="preserve">
    <value>Shows a random hentai image from gelbooru with a given tag. Tag is optional but preferred. (multiple tags are appended with +)</value>
  </data>
  <data name="gelbooru_usage" xml:space="preserve">
    <value>`{0}gelbooru yuri+kissing`</value>
  </data>
  <data name="rule34_cmd" xml:space="preserve">
    <value>rule34</value>
  </data>
  <data name="rule34_desc" xml:space="preserve">
    <value>Shows a random image from rule34.xx with a given tag. Tag is optional but preferred. (multiple tags are appended with +)</value>
  </data>
  <data name="rule34_usage" xml:space="preserve">
    <value>`{0}rule34 yuri+kissing`</value>
  </data>
  <data name="e621_cmd" xml:space="preserve">
    <value>e621</value>
  </data>
  <data name="e621_desc" xml:space="preserve">
    <value>Shows a random hentai image from e621.net with a given tag. Tag is optional but preferred. Use spaces for multiple tags.</value>
  </data>
  <data name="e621_usage" xml:space="preserve">
    <value>`{0}e621 yuri kissing`</value>
  </data>
  <data name="cp_cmd" xml:space="preserve">
    <value>cp</value>
  </data>
  <data name="cp_desc" xml:space="preserve">
    <value>We all know where this will lead you to.</value>
  </data>
  <data name="cp_usage" xml:space="preserve">
    <value>`{0}cp`</value>
  </data>
  <data name="boobs_cmd" xml:space="preserve">
    <value>boobs</value>
  </data>
  <data name="boobs_desc" xml:space="preserve">
    <value>Real adult content.</value>
  </data>
  <data name="boobs_usage" xml:space="preserve">
    <value>`{0}boobs`</value>
  </data>
  <data name="butts_cmd" xml:space="preserve">
    <value>butts ass butt</value>
  </data>
  <data name="butts_desc" xml:space="preserve">
    <value>Real adult content.</value>
  </data>
  <data name="butts_usage" xml:space="preserve">
    <value>`{0}butts` or `{0}ass`</value>
  </data>
  <data name="createwar_cmd" xml:space="preserve">
    <value>createwar cw</value>
  </data>
  <data name="createwar_desc" xml:space="preserve">
    <value>Creates a new war by specifying a size (&gt;10 and multiple of 5) and enemy clan name.</value>
  </data>
  <data name="createwar_usage" xml:space="preserve">
    <value>`{0}cw 15 The Enemy Clan`</value>
  </data>
  <data name="startwar_cmd" xml:space="preserve">
    <value>startwar sw</value>
  </data>
  <data name="startwar_desc" xml:space="preserve">
    <value>Starts a war with a given number.</value>
  </data>
  <data name="startwar_usage" xml:space="preserve">
    <value>`{0}sw 15`</value>
  </data>
  <data name="listwar_cmd" xml:space="preserve">
    <value>listwar lw</value>
  </data>
  <data name="listwar_desc" xml:space="preserve">
    <value>Shows the active war claims by a number. Shows all wars in a short way if no number is specified.</value>
  </data>
  <data name="listwar_usage" xml:space="preserve">
    <value>`{0}lw [war_number] or {0}lw`</value>
  </data>
  <data name="claim_cmd" xml:space="preserve">
    <value>claim call c</value>
  </data>
  <data name="claim_desc" xml:space="preserve">
    <value>Claims a certain base from a certain war. You can supply a name in the third optional argument to claim in someone else's place.</value>
  </data>
  <data name="claim_usage" xml:space="preserve">
    <value>`{0}call [war_number] [base_number] [optional_other_name]`</value>
  </data>
  <data name="claimfinish_cmd" xml:space="preserve">
    <value>claimfinish cf</value>
  </data>
  <data name="claimfinish_desc" xml:space="preserve">
    <value>Finish your claim with 3 stars if you destroyed a base. First argument is the war number, optional second argument is a base number if you want to finish for someone else.</value>
  </data>
  <data name="claimfinish_usage" xml:space="preserve">
    <value>`{0}cf 1` or `{0}cf 1 5`</value>
  </data>
  <data name="claimfinish2_cmd" xml:space="preserve">
    <value>claimfinish2 cf2</value>
  </data>
  <data name="claimfinish2_desc" xml:space="preserve">
    <value>Finish your claim with 2 stars if you destroyed a base. First argument is the war number, optional second argument is a base number if you want to finish for someone else.</value>
  </data>
  <data name="claimfinish2_usage" xml:space="preserve">
    <value>`{0}cf2 1` or `{0}cf2 1 5`</value>
  </data>
  <data name="claimfinish1_cmd" xml:space="preserve">
    <value>claimfinish1 cf1</value>
  </data>
  <data name="claimfinish1_desc" xml:space="preserve">
    <value>Finish your claim with 1 star if you destroyed a base. First argument is the war number, optional second argument is a base number if you want to finish for someone else.</value>
  </data>
  <data name="claimfinish1_usage" xml:space="preserve">
    <value>`{0}cf1 1` or `{0}cf1 1 5`</value>
  </data>
  <data name="unclaim_cmd" xml:space="preserve">
    <value>unclaim ucall uc</value>
  </data>
  <data name="unclaim_desc" xml:space="preserve">
    <value>Removes your claim from a certain war. Optional second argument denotes a person in whose place to unclaim</value>
  </data>
  <data name="unclaim_usage" xml:space="preserve">
    <value>`{0}uc [war_number] [optional_other_name]`</value>
  </data>
  <data name="endwar_cmd" xml:space="preserve">
    <value>endwar ew</value>
  </data>
  <data name="endwar_desc" xml:space="preserve">
    <value>Ends the war with a given index.</value>
  </data>
  <data name="endwar_usage" xml:space="preserve">
    <value>`{0}ew [war_number]`</value>
  </data>
  <data name="translate_cmd" xml:space="preserve">
    <value>translate trans</value>
  </data>
  <data name="translate_desc" xml:space="preserve">
    <value>Translates from&gt;to text. From the given language to the destination language.</value>
  </data>
  <data name="translate_usage" xml:space="preserve">
    <value>`{0}trans en&gt;fr Hello`</value>
  </data>
  <data name="translangs_cmd" xml:space="preserve">
    <value>translangs</value>
  </data>
  <data name="translangs_desc" xml:space="preserve">
    <value>Lists the valid languages for translation.</value>
  </data>
  <data name="translangs_usage" xml:space="preserve">
    <value>`{0}translangs`</value>
  </data>
  <data name="guide_desc" xml:space="preserve">
    <value>Sends a readme and a guide links to the channel.</value>
  </data>
  <data name="guide_usage" xml:space="preserve">
    <value>`{0}readme` or `{0}guide`</value>
  </data>
  <data name="guide_cmd" xml:space="preserve">
    <value>readme guide</value>
  </data>
  <data name="calcops_desc" xml:space="preserve">
    <value>Shows all available operations in {0}calc command</value>
  </data>
  <data name="calcops_usage" xml:space="preserve">
    <value>`{0}calcops`</value>
  </data>
  <data name="calcops_cmd" xml:space="preserve">
    <value>calcops</value>
  </data>
  <data name="delallquotes_desc" xml:space="preserve">
    <value>Deletes all quotes on a specified keyword.</value>
  </data>
  <data name="delallquotes_usage" xml:space="preserve">
    <value>`{0}delallq kek`</value>
  </data>
  <data name="delallquotes_cmd" xml:space="preserve">
    <value>delallq daq</value>
  </data>
  <data name="greetdmmsg_cmd" xml:space="preserve">
    <value>greetdmmsg</value>
  </data>
  <data name="greetdmmsg_usage" xml:space="preserve">
    <value>`{0}greetdmmsg Welcome to the server, %user%`.</value>
  </data>
  <data name="greetdmmsg_desc" xml:space="preserve">
    <value>Sets a new join announcement message which will be sent to the user who joined. Type %user% if you want to mention the new member. Using it with no message will show the current DM greet message.</value>
  </data>
  <data name="cash_desc" xml:space="preserve">
    <value>Check how much currency a person has. (Defaults to yourself)</value>
  </data>
  <data name="cash_usage" xml:space="preserve">
    <value>`{0}$$` or `{0}$$ @SomeGuy`</value>
  </data>
  <data name="cash_cmd" xml:space="preserve">
    <value>cash $$</value>
  </data>
  <data name="listperms_desc" xml:space="preserve">
    <value>Lists whole permission chain with their indexes. You can specify an optional page number if there are a lot of permissions.</value>
  </data>
  <data name="listperms_usage" xml:space="preserve">
    <value>`{0}lp` or `{0}lp 3`</value>
  </data>
  <data name="listperms_cmd" xml:space="preserve">
    <value>listperms lp</value>
  </data>
  <data name="allusrmdls_desc" xml:space="preserve">
    <value>Enable or disable all modules for a specific user.</value>
  </data>
  <data name="allusrmdls_usage" xml:space="preserve">
    <value>`{0}aum enable @someone`</value>
  </data>
  <data name="allusrmdls_cmd" xml:space="preserve">
    <value>allusrmdls aum</value>
  </data>
  <data name="moveperm_desc" xml:space="preserve">
    <value>Moves permission from one position to another in Permissions list.</value>
  </data>
  <data name="moveperm_usage" xml:space="preserve">
    <value>`{0}mp 2 4`</value>
  </data>
  <data name="moveperm_cmd" xml:space="preserve">
    <value>moveperm mp</value>
  </data>
  <data name="removeperm_desc" xml:space="preserve">
    <value>Removes a permission from a given position in Permissions list.</value>
  </data>
  <data name="removeperm_usage" xml:space="preserve">
    <value>`{0}rp 1`</value>
  </data>
  <data name="removeperm_cmd" xml:space="preserve">
    <value>removeperm rp</value>
  </data>
  <data name="migratedata_desc" xml:space="preserve">
    <value>Migrate data from old bot configuration</value>
  </data>
  <data name="migratedata_usage" xml:space="preserve">
    <value>`{0}migratedata`</value>
  </data>
  <data name="migratedata_cmd" xml:space="preserve">
    <value>migratedata</value>
  </data>
  <data name="checkstream_desc" xml:space="preserve">
    <value>Checks if a user is online on a certain streaming platform.</value>
  </data>
  <data name="checkstream_usage" xml:space="preserve">
    <value>`{0}cs twitch MyFavStreamer`</value>
  </data>
  <data name="checkstream_cmd" xml:space="preserve">
    <value>checkstream cs</value>
  </data>
  <data name="showemojis_cmd" xml:space="preserve">
    <value>showemojis se</value>
  </data>
  <data name="showemojis_desc" xml:space="preserve">
    <value>Shows a name and a link to every SPECIAL emoji in the message.</value>
  </data>
  <data name="showemojis_usage" xml:space="preserve">
    <value>`{0}se A message full of SPECIAL emojis`</value>
  </data>
  <data name="shuffledeck_cmd" xml:space="preserve">
    <value>shuffle sh</value>
  </data>
  <data name="shuffledeck_desc" xml:space="preserve">
    <value>Reshuffles all cards back into the deck.</value>
  </data>
  <data name="shuffledeck_usage" xml:space="preserve">
    <value>`{0}sh`</value>
  </data>
  <data name="forwardmessages_cmd" xml:space="preserve">
    <value>fwmsgs</value>
  </data>
  <data name="forwardmessages_desc" xml:space="preserve">
    <value>Toggles forwarding of non-command messages sent to bot's DM to the bot owners</value>
  </data>
  <data name="forwardmessages_usage" xml:space="preserve">
    <value>`{0}fwmsgs`</value>
  </data>
  <data name="forwardtoall_cmd" xml:space="preserve">
    <value>fwtoall</value>
  </data>
  <data name="forwardtoall_desc" xml:space="preserve">
    <value>Toggles whether messages will be forwarded to all bot owners or only to the first one specified in the credentials.json</value>
  </data>
  <data name="forwardtoall_usage" xml:space="preserve">
    <value>`{0}fwtoall`</value>
  </data>
  <data name="resetpermissions_cmd" xml:space="preserve">
    <value>resetperms</value>
  </data>
  <data name="resetpermissions_desc" xml:space="preserve">
    <value>Resets BOT's permissions module on this server to the default value.</value>
  </data>
  <data name="resetpermissions_usage" xml:space="preserve">
    <value>`{0}resetperms`</value>
  </data>
  <data name="antiraid_cmd" xml:space="preserve">
    <value>antiraid</value>
  </data>
  <data name="antiraid_desc" xml:space="preserve">
    <value>Sets an anti-raid protection on the server. First argument is number of people which will trigger the protection. Second one is a time interval in which that number of people needs to join in order to trigger the protection, and third argument is punishment for those people (Kick, Ban, Mute)</value>
  </data>
  <data name="antiraid_usage" xml:space="preserve">
    <value>`{0}antiraid 5 20 Kick`</value>
  </data>
  <data name="antispam_cmd" xml:space="preserve">
    <value>antispam</value>
  </data>
  <data name="antispam_desc" xml:space="preserve">
    <value>Stops people from repeating same message X times in a row. You can specify to either mute, kick or ban  the offenders.</value>
  </data>
  <data name="antispam_usage" xml:space="preserve">
    <value>`{0}antispam 3 Mute` or `{0}antispam 4 Kick` or `{0}antispam 6 Ban`</value>
  </data>
  <data name="chatmute_cmd" xml:space="preserve">
    <value>chatmute</value>
  </data>
  <data name="chatmute_desc" xml:space="preserve">
    <value>Prevents a mentioned user from chatting in text channels.</value>
  </data>
  <data name="chatmute_usage" xml:space="preserve">
    <value>`{0}chatmute @Someone`</value>
  </data>
  <data name="voicemute_cmd" xml:space="preserve">
    <value>voicemute</value>
  </data>
  <data name="voicemute_desc" xml:space="preserve">
    <value>Prevents a mentioned user from speaking in voice channels.</value>
  </data>
  <data name="voicemute_usage" xml:space="preserve">
    <value>`{0}voicemute @Someone`</value>
  </data>
  <data name="konachan_cmd" xml:space="preserve">
    <value>konachan</value>
  </data>
  <data name="konachan_desc" xml:space="preserve">
    <value>Shows a random hentai image from konachan with a given tag. Tag is optional but preferred.</value>
  </data>
  <data name="konachan_usage" xml:space="preserve">
    <value>`{0}konachan yuri`</value>
  </data>
  <data name="setmuterole_cmd" xml:space="preserve">
    <value>setmuterole</value>
  </data>
  <data name="setmuterole_desc" xml:space="preserve">
    <value>Sets a name of the role which will be assigned to people who should be muted. Default is WizBot-Mute.</value>
  </data>
  <data name="setmuterole_usage" xml:space="preserve">
    <value>`{0}setmuterole Silenced`</value>
  </data>
  <data name="adsarm_cmd" xml:space="preserve">
    <value>adsarm</value>
  </data>
  <data name="adsarm_desc" xml:space="preserve">
    <value>Toggles the automatic deletion of confirmations for {0}iam and {0}iamn commands.</value>
  </data>
  <data name="adsarm_usage" xml:space="preserve">
    <value>`{0}adsarm`</value>
  </data>
  <data name="setstream_cmd" xml:space="preserve">
    <value>setstream</value>
  </data>
  <data name="setstream_desc" xml:space="preserve">
    <value>Sets the bots stream. First argument is the twitch link, second argument is stream name.</value>
  </data>
  <data name="setstream_usage" xml:space="preserve">
    <value>`{0}setstream TWITCHLINK Hello`</value>
  </data>
  <data name="chatunmute_cmd" xml:space="preserve">
    <value>chatunmute</value>
  </data>
  <data name="chatunmute_desc" xml:space="preserve">
    <value>Removes a mute role previously set on a mentioned user with `{0}chatmute` which prevented him from chatting in text channels.</value>
  </data>
  <data name="chatunmute_usage" xml:space="preserve">
    <value>`{0}chatunmute @Someone`</value>
  </data>
  <data name="unmute_cmd" xml:space="preserve">
    <value>unmute</value>
  </data>
  <data name="unmute_desc" xml:space="preserve">
    <value>Unmutes a mentioned user previously muted with `{0}mute` command.</value>
  </data>
  <data name="unmute_usage" xml:space="preserve">
    <value>`{0}unmute @Someone`</value>
  </data>
  <data name="xkcd_cmd" xml:space="preserve">
    <value>xkcd</value>
  </data>
  <data name="xkcd_desc" xml:space="preserve">
    <value>Shows a XKCD comic. No arguments will retrieve random one. Number argument will retrieve a specific comic, and "latest" will get the latest one.</value>
  </data>
  <data name="xkcd_usage" xml:space="preserve">
    <value>`{0}xkcd` or `{0}xkcd 1400` or `{0}xkcd latest`</value>
  </data>
  <data name="placelist_cmd" xml:space="preserve">
    <value>placelist</value>
  </data>
  <data name="placelist_desc" xml:space="preserve">
    <value>Shows the list of available tags for the `{0}place` command.</value>
  </data>
  <data name="placelist_usage" xml:space="preserve">
    <value>`{0}placelist`</value>
  </data>
  <data name="place_cmd" xml:space="preserve">
    <value>place</value>
  </data>
  <data name="place_desc" xml:space="preserve">
    <value>Shows a placeholder image of a given tag. Use `{0}placelist` to see all available tags. You can specify the width and height of the image as the last two optional arguments.</value>
  </data>
  <data name="place_usage" xml:space="preserve">
    <value>`{0}place Cage` or `{0}place steven 500 400`</value>
  </data>
  <data name="togethertube_cmd" xml:space="preserve">
    <value>togethertube totube</value>
  </data>
  <data name="togethertube_desc" xml:space="preserve">
    <value>Creates a new room on &lt;https://togethertube.com&gt; and shows the link in the chat.</value>
  </data>
  <data name="togethertube_usage" xml:space="preserve">
    <value>`{0}totube`</value>
  </data>
  <data name="publicpoll_cmd" xml:space="preserve">
    <value>publicpoll ppoll</value>
  </data>
  <data name="publicpoll_desc" xml:space="preserve">
    <value>Creates a public poll which requires users to type a number of the voting option in the channel command is ran in.</value>
  </data>
  <data name="publicpoll_usage" xml:space="preserve">
    <value>`{0}ppoll Question?;Answer1;Answ 2;A_3`</value>
  </data>
  <data name="autotranslang_cmd" xml:space="preserve">
    <value>autotranslang atl</value>
  </data>
  <data name="autotranslang_desc" xml:space="preserve">
    <value>`{0}atl en&gt;fr`</value>
  </data>
  <data name="autotranslang_usage" xml:space="preserve">
    <value>Sets your source and target language to be used with `{0}at`. Specify no arguments to remove previously set value.</value>
  </data>
  <data name="autotranslate_cmd" xml:space="preserve">
    <value>autotrans at</value>
  </data>
  <data name="autotranslate_desc" xml:space="preserve">
    <value>Starts automatic translation of all messages by users who set their `{0}atl` in this channel. You can set "del" argument to automatically delete all translated user messages.</value>
  </data>
  <data name="autotranslate_usage" xml:space="preserve">
    <value>`{0}at` or `{0}at del`</value>
  </data>
  <data name="listquotes_cmd" xml:space="preserve">
    <value>listquotes liqu</value>
  </data>
  <data name="listquotes_desc" xml:space="preserve">
    <value>`{0}liqu` or `{0}liqu 3`</value>
  </data>
  <data name="listquotes_usage" xml:space="preserve">
    <value>Lists all quotes on the server ordered alphabetically. 15 Per page.</value>
  </data>
  <data name="typedel_cmd" xml:space="preserve">
    <value>typedel</value>
  </data>
  <data name="typedel_desc" xml:space="preserve">
    <value>Deletes a typing article given the ID.</value>
  </data>
  <data name="typedel_usage" xml:space="preserve">
    <value>`{0}typedel 3`</value>
  </data>
  <data name="typelist_cmd" xml:space="preserve">
    <value>typelist</value>
  </data>
  <data name="typelist_desc" xml:space="preserve">
    <value>Lists added typing articles with their IDs. 15 per page.</value>
  </data>
  <data name="typelist_usage" xml:space="preserve">
    <value>`{0}typelist` or `{0}typelist 3`</value>
  </data>
  <data name="listservers_cmd" xml:space="preserve">
    <value>listservers</value>
  </data>
  <data name="listservers_desc" xml:space="preserve">
    <value>Lists servers the bot is on with some basic info. 15 per page.</value>
  </data>
  <data name="listservers_usage" xml:space="preserve">
    <value>`{0}listservers 3`</value>
  </data>
  <data name="hentaibomb_cmd" xml:space="preserve">
    <value>hentaibomb</value>
  </data>
  <data name="hentaibomb_desc" xml:space="preserve">
    <value>Shows a total 5 images (from gelbooru, danbooru, konachan, yandere and atfbooru). Tag is optional but preferred.</value>
  </data>
  <data name="hentaibomb_usage" xml:space="preserve">
    <value>`{0}hentaibomb yuri`</value>
  </data>
  <data name="cleverbot_cmd" xml:space="preserve">
    <value>cleverbot</value>
  </data>
  <data name="cleverbot_desc" xml:space="preserve">
    <value>Toggles cleverbot session. When enabled, the bot will reply to messages starting with bot mention in the server. Custom reactions starting with %mention% won't work if cleverbot is enabled.</value>
  </data>
  <data name="cleverbot_usage" xml:space="preserve">
    <value>`{0}cleverbot`</value>
  </data>
  <data name="shorten_cmd" xml:space="preserve">
    <value>shorten</value>
  </data>
  <data name="shorten_desc" xml:space="preserve">
    <value>Attempts to shorten an URL, if it fails, returns the input URL.</value>
  </data>
  <data name="shorten_usage" xml:space="preserve">
    <value>`{0}shorten https://google.com`</value>
  </data>
  <data name="mcping_cmd" xml:space="preserve">
    <value>minecraftping mcping</value>
  </data>
  <data name="mcping_desc" xml:space="preserve">
    <value>Pings a minecraft server.</value>
  </data>
  <data name="mcping_usage" xml:space="preserve">
    <value>`{0}mcping 127.0.0.1:25565`</value>
  </data>
  <data name="mcq_cmd" xml:space="preserve">
    <value>minecraftquery mcq</value>
  </data>
  <data name="mcq_desc" xml:space="preserve">
    <value>Finds information about a minecraft server.</value>
  </data>
  <data name="mcq_usage" xml:space="preserve">
    <value>`{0}mcq server:ip`</value>
  </data>
  <data name="wikia_cmd" xml:space="preserve">
    <value>wikia</value>
  </data>
  <data name="wikia_desc" xml:space="preserve">
    <value>Gives you back a wikia link</value>
  </data>
  <data name="wikia_usage" xml:space="preserve">
    <value>`{0}wikia mtg Vigilance` or `{0}wikia mlp Dashy`</value>
  </data>
  <data name="yandere_cmd" xml:space="preserve">
    <value>yandere</value>
  </data>
  <data name="yandere_desc" xml:space="preserve">
    <value>Shows a random image from yandere with a given tag. Tag is optional but preferred. (multiple tags are appended with +)</value>
  </data>
  <data name="yandere_usage" xml:space="preserve">
    <value>`{0}yandere tag1+tag2`</value>
  </data>
  <data name="magicthegathering_cmd" xml:space="preserve">
    <value>magicthegathering mtg</value>
  </data>
  <data name="magicthegathering_desc" xml:space="preserve">
    <value>Searches for a Magic The Gathering card.</value>
  </data>
  <data name="magicthegathering_usage" xml:space="preserve">
    <value>`{0}magicthegathering about face` or `{0}mtg about face`</value>
  </data>
  <data name="yodify_cmd" xml:space="preserve">
    <value>yodify yoda</value>
  </data>
  <data name="yodify_desc" xml:space="preserve">
    <value>Translates your normal sentences into Yoda styled sentences!</value>
  </data>
  <data name="yodify_usage" xml:space="preserve">
    <value>{0}yodify I was once an adventurer like you` or `{0}yoda my feelings hurt`</value>
  </data>
  <data name="attack_cmd" xml:space="preserve">
    <value>attack</value>
  </data>
  <data name="attack_desc" xml:space="preserve">
    <value>Attacks a target with the given move. Use `{0}movelist` to see a list of moves your type can use.</value>
  </data>
  <data name="attack_usage" xml:space="preserve">
    <value>`{0}attack "vine whip" @someguy`</value>
  </data>
  <data name="heal_cmd" xml:space="preserve">
    <value>heal</value>
  </data>
  <data name="heal_desc" xml:space="preserve">
    <value>Heals someone. Revives those who fainted. Costs a Cherry Blossom</value>
  </data>
  <data name="heal_usage" xml:space="preserve">
    <value>`{0}heal @someone`</value>
  </data>
  <data name="movelist_cmd" xml:space="preserve">
    <value>movelist ml</value>
  </data>
  <data name="movelist_desc" xml:space="preserve">
    <value>Lists the moves you are able to use</value>
  </data>
  <data name="movelist_usage" xml:space="preserve">
    <value>`{0}ml`</value>
  </data>
  <data name="settype_cmd" xml:space="preserve">
    <value>settype</value>
  </data>
  <data name="settype_desc" xml:space="preserve">
    <value>Set your poketype. Costs a Cherry Blossom. Provide no arguments to see a list of available types.</value>
  </data>
  <data name="settype_usage" xml:space="preserve">
    <value>`{0}settype fire` or `{0}settype`</value>
  </data>
  <data name="type_cmd" xml:space="preserve">
    <value>type</value>
  </data>
  <data name="type_desc" xml:space="preserve">
    <value>Get the poketype of the target.</value>
  </data>
  <data name="type_usage" xml:space="preserve">
    <value>`{0}type @someone`</value>
  </data>
  <data name="hangmanlist_cmd" xml:space="preserve">
    <value>hangmanlist</value>
  </data>
  <data name="hangmanlist_desc" xml:space="preserve">
    <value>Shows a list of hangman term types.</value>
  </data>
  <data name="hangmanlist_usage" xml:space="preserve">
    <value>`{0} hangmanlist`</value>
  </data>
  <data name="hangman_cmd" xml:space="preserve">
    <value>hangman</value>
  </data>
  <data name="hangman_desc" xml:space="preserve">
    <value>Starts a game of hangman in the channel. Use `{0}hangmanlist` to see a list of available term types. Defaults to 'all'.</value>
  </data>
  <data name="hangman_usage" xml:space="preserve">
    <value>`{0}hangman` or `{0}hangman movies`</value>
  </data>
</root>