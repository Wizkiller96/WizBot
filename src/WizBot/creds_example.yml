# DO NOT CHANGE
version: 7
# Bot token. Do not share with anyone ever -> https://discordapp.com/developers/applications/
token: ''
# List of Ids of the users who have bot owner permissions
# **DO NOT ADD PEOPLE YOU DON'T TRUST**
ownerIds: []
# List of Ids of the users who have bot admin permissions
# **DO NOT ADD PEOPLE YOU DON'T TRUST**
adminIds: []
# Keep this on 'true' unless you're sure your bot shouldn't use privileged intents or you're waiting to be accepted
usePrivilegedIntents: true
# The number of shards that the bot will be running on.
# Leave at 1 if you don't know what you're doing.
# 
# note: If you are planning to have more than one shard, then you must change botCache to 'redis'.
# Also, in that case you should be using WizBot.Coordinator to start the bot, and it will correctly override this value.
totalShards: 1
# Login to https://console.cloud.google.com, create a new project, go to APIs & Services -> Library -> YouTube Data API and enable it.
# Then, go to APIs and Services -> Credentials and click Create credentials -> API key.
# Used only for Youtube Data Api (at the moment).
googleApiKey: ''
# Create a new custom search here https://programmablesearchengine.google.com/cse/create/new
# Enable SafeSearch
# Remove all Sites to Search
# Enable Search the entire web
# Copy the 'Search Engine ID' to the SearchId field
# 
# Do all steps again but enable image search for the ImageSearchId
google:
  searchId:
  imageSearchId:
# Settings for voting system for discordbots. Meant for use on global WizBot.
votes:
# top.gg votes service url
# This is the url of your instance of the WizBot.Votes api
# Example: https://votes.my.cool.bot.com
  topggServiceUrl: ''
  # Authorization header value sent to the TopGG service url with each request
  # This should be equivalent to the TopggKey in your WizBot.Votes api appsettings.json file
  topggKey: ''
  # discords.com votes service url
  # This is the url of your instance of the WizBot.Votes api
  # Example: https://votes.my.cool.bot.com
  discordsServiceUrl: ''
  # Authorization header value sent to the Discords service url with each request
  # This should be equivalent to the DiscordsKey in your WizBot.Votes api appsettings.json file
  discordsKey: ''
# Patreon auto reward system settings.
# go to https://www.patreon.com/portal -> my clients -> create client
patreon:
  clientId: 
  accessToken: ''
  refreshToken: ''
  clientSecret: ''
  # Campaign ID of your patreon page. Go to your patreon page (make sure you're logged in) and type "prompt('Campaign ID', window.patreon.bootstrap.creator.data.id);" in the console. (ctrl + shift + i)
  campaignId: ''
# Api key for sending stats to DiscordBotList.
botListToken: ''
# Official cleverbot api key.
cleverbotApiKey: ''
# Official GPT-3 api key.
gpt3ApiKey: ''
# Which cache implementation should bot use.
# 'memory' - Cache will be in memory of the bot's process itself. Only use this on bots with a single shard. When the bot is restarted the cache is reset.
# 'redis' - Uses redis (which needs to be separately downloaded and installed). The cache will persist through bot restarts. You can configure connection string in creds.yml
botCache: Memory
# Redis connection string. Don't change if you don't know what you're doing.
# Only used if botCache is set to 'redis'
redisOptions: localhost:6379,syncTimeout=30000,responseTimeout=30000,allowAdmin=true,password=
# Database options. Don't change if you don't know what you're doing. Leave null for default values
db:
# Database type. "sqlite", "mysql" and "postgresql" are supported.
# Default is "sqlite"
  type: sqlite
  # Database connection string.
  # You MUST change this if you're not using "sqlite" type.
  # Default is "Data Source=data/WizBot.db"
  # Example for mysql: "Server=localhost;Port=3306;Uid=root;Pwd=my_super_secret_mysql_password;Database=wizbot"
  # Example for postgresql: "Server=localhost;Port=5432;User Id=postgres;Password=my_super_secret_postgres_password;Database=wizbot;"
  connectionString: Data Source=data/WizBot.db
# Address and port of the coordinator endpoint. Leave empty for default.
# Change only if you've changed the coordinator address or port.
coordinatorUrl: http://localhost:3442
# Api key obtained on https://rapidapi.com (go to MyApps -> Add New App -> Enter Name -> Application key)
rapidApiKey: 
# https://locationiq.com api key (register and you will receive the token in the email).
# Used only for .time command.
locationIqApiKey: 
# https://timezonedb.com api key (register and you will receive the token in the email).
# Used only for .time command
timezoneDbApiKey: 
# https://pro.coinmarketcap.com/account/ api key. There is a free plan for personal use.
# Used for cryptocurrency related commands.
coinmarketcapApiKey: 
# Api key used for Osu related commands. Obtain this key at https://osu.ppy.sh/p/api
osuApiKey: 
# Optional Trovo client id.
# You should use this if Trovo stream notifications stopped working or you're getting ratelimit errors.
trovoClientId: 
# Obtain by creating an application at https://dev.twitch.tv/console/apps
twitchClientId: 
# Obtain by creating an application at https://dev.twitch.tv/console/apps
twitchClientSecret: 
# Command and args which will be used to restart the bot.
# Only used if bot is executed directly (NOT through the coordinator)
# placeholders:
# {0} -> shard id
# {1} -> total shards
# Linux default
# cmd: dotnet
# args: "WizBot.dll -- {0}"
# Windows default
# cmd: WizBot.exe
# args: "{0}"
restartCommand:
  cmd: 
  args: 
